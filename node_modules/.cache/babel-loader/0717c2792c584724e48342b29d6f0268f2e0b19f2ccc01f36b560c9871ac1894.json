{"ast":null,"code":"import _defineProperty from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _NATIVE_CURRENCY;\nimport { NativeCurrency, Token } from '../model';\nimport { Mainnet, Kovan } from '../model/chain/ethereum';\nimport { BSC, BSCTestnet } from '../model/chain/bsc';\nexport var Ether = new NativeCurrency('Ether', 'ETH', Mainnet.chainId);\nexport var Dai = new Token('Dai', 'DAI', Mainnet.chainId, '0x6B175474E89094C44Da98b954EedeAC495271d0F');\nexport var KovanEther = new NativeCurrency('Kovan Ether', 'KETH', Kovan.chainId);\nexport var KovanDai = new Token('Dai', 'DAI', Kovan.chainId, '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa');\nexport var BNB = new NativeCurrency('Binance Coin', 'BNB', BSC.chainId);\nexport var BUSD = new Token('Binance USD', 'BUSD', BSC.chainId, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56');\nexport var TestBNB = new NativeCurrency('Test Binance Coin', 'TBNB', BSCTestnet.chainId);\nexport var TestBUSD = new Token('Test Binance USD', 'TBUSD', BSCTestnet.chainId, '0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47');\nexport var NATIVE_CURRENCY = (_NATIVE_CURRENCY = {}, _defineProperty(_NATIVE_CURRENCY, Mainnet.chainId, Ether), _defineProperty(_NATIVE_CURRENCY, Kovan.chainId, KovanEther), _defineProperty(_NATIVE_CURRENCY, BSC.chainId, BNB), _defineProperty(_NATIVE_CURRENCY, BSCTestnet.chainId, TestBNB), _NATIVE_CURRENCY);","map":{"version":3,"names":["NativeCurrency","Token","Mainnet","Kovan","BSC","BSCTestnet","Ether","chainId","Dai","KovanEther","KovanDai","BNB","BUSD","TestBNB","TestBUSD","NATIVE_CURRENCY","_NATIVE_CURRENCY","_defineProperty"],"sources":["D:\\CC\\Server\\prototype\\node_modules\\@usedapp\\core\\src\\constants\\currencies.ts"],"sourcesContent":["import { NativeCurrency, Token } from '../model'\nimport { Mainnet, Kovan } from '../model/chain/ethereum'\nimport { BSC, BSCTestnet } from '../model/chain/bsc'\n\nexport const Ether = new NativeCurrency('Ether', 'ETH', Mainnet.chainId)\nexport const Dai = new Token('Dai', 'DAI', Mainnet.chainId, '0x6B175474E89094C44Da98b954EedeAC495271d0F')\n\nexport const KovanEther = new NativeCurrency('Kovan Ether', 'KETH', Kovan.chainId)\nexport const KovanDai = new Token('Dai', 'DAI', Kovan.chainId, '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa')\n\nexport const BNB = new NativeCurrency('Binance Coin', 'BNB', BSC.chainId)\nexport const BUSD = new Token('Binance USD', 'BUSD', BSC.chainId, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56')\n\nexport const TestBNB = new NativeCurrency('Test Binance Coin', 'TBNB', BSCTestnet.chainId)\nexport const TestBUSD = new Token(\n  'Test Binance USD',\n  'TBUSD',\n  BSCTestnet.chainId,\n  '0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47'\n)\n\nexport const NATIVE_CURRENCY = {\n  [Mainnet.chainId]: Ether,\n  [Kovan.chainId]: KovanEther,\n  [BSC.chainId]: BNB,\n  [BSCTestnet.chainId]: TestBNB,\n}\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,KAAK,QAAQ,UAAU;AAChD,SAASC,OAAO,EAAEC,KAAK,QAAQ,yBAAyB;AACxD,SAASC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAEpD,OAAO,IAAMC,KAAK,GAAG,IAAIN,cAAc,CAAC,OAAO,EAAE,KAAK,EAAEE,OAAO,CAACK,OAAO,CAAC;AACxE,OAAO,IAAMC,GAAG,GAAG,IAAIP,KAAK,CAAC,KAAK,EAAE,KAAK,EAAEC,OAAO,CAACK,OAAO,EAAE,4CAA4C,CAAC;AAEzG,OAAO,IAAME,UAAU,GAAG,IAAIT,cAAc,CAAC,aAAa,EAAE,MAAM,EAAEG,KAAK,CAACI,OAAO,CAAC;AAClF,OAAO,IAAMG,QAAQ,GAAG,IAAIT,KAAK,CAAC,KAAK,EAAE,KAAK,EAAEE,KAAK,CAACI,OAAO,EAAE,4CAA4C,CAAC;AAE5G,OAAO,IAAMI,GAAG,GAAG,IAAIX,cAAc,CAAC,cAAc,EAAE,KAAK,EAAEI,GAAG,CAACG,OAAO,CAAC;AACzE,OAAO,IAAMK,IAAI,GAAG,IAAIX,KAAK,CAAC,aAAa,EAAE,MAAM,EAAEG,GAAG,CAACG,OAAO,EAAE,4CAA4C,CAAC;AAE/G,OAAO,IAAMM,OAAO,GAAG,IAAIb,cAAc,CAAC,mBAAmB,EAAE,MAAM,EAAEK,UAAU,CAACE,OAAO,CAAC;AAC1F,OAAO,IAAMO,QAAQ,GAAG,IAAIb,KAAK,CAC/B,kBAAkB,EAClB,OAAO,EACPI,UAAU,CAACE,OAAO,EAClB,4CAA4C,CAC7C;AAED,OAAO,IAAMQ,eAAe,IAAAC,gBAAA,OAAAC,eAAA,CAAAD,gBAAA,EACzBd,OAAO,CAACK,OAAO,EAAGD,KAAK,GAAAW,eAAA,CAAAD,gBAAA,EACvBb,KAAK,CAACI,OAAO,EAAGE,UAAU,GAAAQ,eAAA,CAAAD,gBAAA,EAC1BZ,GAAG,CAACG,OAAO,EAAGI,GAAG,GAAAM,eAAA,CAAAD,gBAAA,EACjBX,UAAU,CAACE,OAAO,EAAGM,OAAO,GAAAG,gBAAA,CAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}