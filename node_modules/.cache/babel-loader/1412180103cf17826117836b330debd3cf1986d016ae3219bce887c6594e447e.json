{"ast":null,"code":"import { DEFAULT_SUPPORTED_CHAINS } from '../constants';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport var getChainById = function getChainById(chainId) {\n  return DEFAULT_SUPPORTED_CHAINS.find(function (network) {\n    return network.chainId === chainId;\n  });\n};\nvar deprecationWarning = function deprecationWarning(methodName) {\n  return console.warn(\"\".concat(methodName, \" is deprecated, can call with Chain directly\"));\n};\n/**\n * @public\n * @deprecated\n */\nexport var getExplorerAddressLink = function getExplorerAddressLink(address, chainId) {\n  var _a;\n  deprecationWarning('getExplorerAddressLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerAddressLink(address)) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport var getExplorerTransactionLink = function getExplorerTransactionLink(transactionHash, chainId) {\n  var _a;\n  deprecationWarning('getExplorerTransactionLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerTransactionLink(transactionHash)) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport var getChainName = function getChainName(chainId) {\n  var _a;\n  deprecationWarning('getChainName');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName) || '';\n};\n/**\n * @public\n * @deprecated\n */\nexport var isTestChain = function isTestChain(chainId) {\n  var _a;\n  deprecationWarning('isTestChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isTestChain) || false;\n};\n/**\n * @public\n * @deprecated\n */\nexport var isLocalChain = function isLocalChain(chainId) {\n  var _a;\n  deprecationWarning('isLocalChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isLocalChain) || false;\n};","map":{"version":3,"names":["DEFAULT_SUPPORTED_CHAINS","getChainById","chainId","find","network","deprecationWarning","methodName","console","warn","concat","getExplorerAddressLink","address","_a","getExplorerTransactionLink","transactionHash","getChainName","chainName","isTestChain","isLocalChain"],"sources":["D:\\CC\\test\\node_modules\\@usedapp\\core\\src\\helpers\\chain.ts"],"sourcesContent":["import { DEFAULT_SUPPORTED_CHAINS, ChainId } from '../constants'\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport const getChainById = (chainId: ChainId) =>\n  DEFAULT_SUPPORTED_CHAINS.find((network) => network.chainId === chainId)\n\nconst deprecationWarning = (methodName: string) =>\n  console.warn(`${methodName} is deprecated, can call with Chain directly`)\n\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerAddressLink = (address: string, chainId: ChainId): string | '' => {\n  deprecationWarning('getExplorerAddressLink')\n  return getChainById(chainId)?.getExplorerAddressLink(address) || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const getExplorerTransactionLink = (transactionHash: string, chainId: ChainId): string | '' => {\n  deprecationWarning('getExplorerTransactionLink')\n  return getChainById(chainId)?.getExplorerTransactionLink(transactionHash) || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const getChainName = (chainId: ChainId) => {\n  deprecationWarning('getChainName')\n  return getChainById(chainId)?.chainName || ''\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const isTestChain = (chainId: ChainId) => {\n  deprecationWarning('isTestChain')\n  return getChainById(chainId)?.isTestChain || false\n}\n\n/**\n * @public\n * @deprecated\n */\nexport const isLocalChain = (chainId: ChainId) => {\n  deprecationWarning('isLocalChain')\n  return getChainById(chainId)?.isLocalChain || false\n}\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAiB,cAAc;AAEhE;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,OAAgB;EAAA,OAC3CF,wBAAwB,CAACG,IAAI,CAAC,UAACC,OAAO;IAAA,OAAKA,OAAO,CAACF,OAAO,KAAKA,OAAO;EAAA,EAAC;AAAA;AAEzE,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,UAAkB;EAAA,OAC5CC,OAAO,CAACC,IAAI,IAAAC,MAAA,CAAIH,UAAU,iDAA8C,CAAC;AAAA;AAE3E;;;;AAIA,OAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,OAAe,EAAET,OAAgB,EAAiB;;EACvFG,kBAAkB,CAAC,wBAAwB,CAAC;EAC5C,OAAO,EAAAO,EAAA,GAAAX,YAAY,CAACC,OAAO,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEF,sBAAsB,CAACC,OAAO,CAAC,KAAI,EAAE;AACrE,CAAC;AAED;;;;AAIA,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,eAAuB,EAAEZ,OAAgB,EAAiB;;EACnGG,kBAAkB,CAAC,4BAA4B,CAAC;EAChD,OAAO,EAAAO,EAAA,GAAAX,YAAY,CAACC,OAAO,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEC,0BAA0B,CAACC,eAAe,CAAC,KAAI,EAAE;AACjF,CAAC;AAED;;;;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIb,OAAgB,EAAI;;EAC/CG,kBAAkB,CAAC,cAAc,CAAC;EAClC,OAAO,EAAAO,EAAA,GAAAX,YAAY,CAACC,OAAO,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEI,SAAS,KAAI,EAAE;AAC/C,CAAC;AAED;;;;AAIA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIf,OAAgB,EAAI;;EAC9CG,kBAAkB,CAAC,aAAa,CAAC;EACjC,OAAO,EAAAO,EAAA,GAAAX,YAAY,CAACC,OAAO,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEK,WAAW,KAAI,KAAK;AACpD,CAAC;AAED;;;;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIhB,OAAgB,EAAI;;EAC/CG,kBAAkB,CAAC,cAAc,CAAC;EAClC,OAAO,EAAAO,EAAA,GAAAX,YAAY,CAACC,OAAO,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEM,YAAY,KAAI,KAAK;AACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}