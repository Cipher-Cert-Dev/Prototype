{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _deployContract;\nimport { ContractFactory } from 'ethers';\nexport function deployContract(_x, _x2) {\n  return (_deployContract = _deployContract || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(contractAbi, signer) {\n    var factory, contract;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n          _context.next = 3;\n          return factory.deploy();\n        case 3:\n          contract = _context.sent;\n          _context.next = 6;\n          return contract.deployTransaction.wait();\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}","map":{"version":3,"names":["ContractFactory","deployContract","_x","_x2","_deployContract","_asyncToGenerator","_regeneratorRuntime","mark","_callee","contractAbi","signer","factory","contract","wrap","_callee$","_context","prev","next","abi","bytecode","deploy","sent","deployTransaction","wait","abrupt","stop","apply","arguments"],"sources":["D:\\CC\\test\\node_modules\\@usedapp\\core\\src\\helpers\\contract.ts"],"sourcesContent":["import { ContractFactory, ethers } from 'ethers'\n\ninterface ContractAbi {\n  abi: ethers.ContractInterface\n  bytecode: ethers.utils.BytesLike\n}\n\nexport async function deployContract(\n  contractAbi: ContractAbi,\n  signer: ethers.providers.JsonRpcSigner\n): Promise<ethers.providers.TransactionReceipt> {\n  const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer)\n  const contract = await factory.deploy()\n  return await contract.deployTransaction.wait()\n}\n"],"mappings":";;;AAAA,SAASA,eAAe,QAAgB,QAAQ;AAOhD,gBAAsBC,cAAcA,CAAAC,EAAA,EAAAC,GAAA;EAAA,QAAAC,eAAA,GAAAA,eAAA,IAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA7B,SAAAC,QACLC,WAAwB,EACxBC,MAAsC;IAAA,IAAAC,OAAA,EAAAC,QAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAEhCN,OAAO,GAAG,IAAIX,eAAe,CAACS,WAAW,CAACS,GAAG,EAAET,WAAW,CAACU,QAAQ,EAAET,MAAM,CAAC;UAAAK,QAAA,CAAAE,IAAA;UAAA,OAC3DN,OAAO,CAACS,MAAM,EAAE;QAAA;UAAjCR,QAAQ,GAAAG,QAAA,CAAAM,IAAA;UAAAN,QAAA,CAAAE,IAAA;UAAA,OACDL,QAAQ,CAACU,iBAAiB,CAACC,IAAI,EAAE;QAAA;UAAA,OAAAR,QAAA,CAAAS,MAAA,WAAAT,QAAA,CAAAM,IAAA;QAAA;QAAA;UAAA,OAAAN,QAAA,CAAAU,IAAA;MAAA;IAAA,GAAAjB,OAAA;EAAA,CAC/C,IAAAkB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}