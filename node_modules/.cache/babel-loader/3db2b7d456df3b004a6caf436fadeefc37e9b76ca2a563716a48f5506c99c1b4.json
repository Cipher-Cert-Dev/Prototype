{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers, useLocalStorage, useConfig } from '../../hooks';\nimport { useIsMounted } from '../../hooks/useIsMounted';\nimport { useNotificationsContext } from '../notifications/context';\nimport { TransactionsContext } from './context';\nimport { DEFAULT_STORED_TRANSACTIONS } from './model';\nimport { transactionReducer } from './reducer';\nexport function TransactionProvider(_ref) {\n  var children = _ref.children;\n  var _useEthers = useEthers(),\n    chainId = _useEthers.chainId,\n    library = _useEthers.library;\n  var _useConfig = useConfig(),\n    localStorage = _useConfig.localStorage;\n  var _useLocalStorage = useLocalStorage(localStorage.transactionPath),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    storage = _useLocalStorage2[0],\n    setStorage = _useLocalStorage2[1];\n  var _useReducer = useReducer(transactionReducer, storage !== null && storage !== void 0 ? storage : DEFAULT_STORED_TRANSACTIONS),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    transactions = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var _useNotificationsCont = useNotificationsContext(),\n    addNotification = _useNotificationsCont.addNotification;\n  var isMounted = useIsMounted();\n  useEffect(function () {\n    setStorage(transactions);\n  }, [transactions]);\n  var addTransaction = useCallback(function (payload) {\n    if (!isMounted()) {\n      return;\n    }\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: payload\n    });\n    if (payload.receipt) {\n      var type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n      addNotification({\n        notification: {\n          type: type,\n          submittedAt: Date.now(),\n          transaction: payload.transaction,\n          receipt: payload.receipt,\n          transactionName: payload.transactionName\n        },\n        chainId: payload.transaction.chainId\n      });\n      return;\n    }\n    addNotification({\n      notification: {\n        type: 'transactionStarted',\n        transaction: payload.transaction,\n        submittedAt: payload.submittedAt,\n        transactionName: payload.transactionName\n      },\n      chainId: payload.transaction.chainId\n    });\n  }, [dispatch]);\n  var updateTransaction = useCallback(function (payload) {\n    if (!isMounted()) {\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_TRANSACTION',\n      payload: payload\n    });\n    var type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n    addNotification({\n      notification: {\n        type: type,\n        submittedAt: Date.now(),\n        transaction: payload.transaction,\n        receipt: payload.receipt,\n        transactionName: payload.transactionName\n      },\n      chainId: payload.transaction.chainId\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var _ref2;\n    var updateTransactions = function updateTransactions() {\n      return (_ref2 = _ref2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _ref3;\n        var _a, blockNumber, checkTransaction, chainTransactions, newTransactions, _iterator, _step, tx, newTransaction;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!chainId || !library)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return library.getBlockNumber();\n            case 4:\n              blockNumber = _context2.sent;\n              checkTransaction = function checkTransaction(_x) {\n                return (_ref3 = _ref3 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx) {\n                  var receipt, type;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(tx.receipt || !shouldCheck(blockNumber, tx))) {\n                          _context.next = 2;\n                          break;\n                        }\n                        return _context.abrupt(\"return\", tx);\n                      case 2:\n                        _context.prev = 2;\n                        _context.next = 5;\n                        return library.getTransactionReceipt(tx.transaction.hash);\n                      case 5:\n                        receipt = _context.sent;\n                        if (!receipt) {\n                          _context.next = 12;\n                          break;\n                        }\n                        type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n                        addNotification({\n                          notification: {\n                            type: type,\n                            submittedAt: Date.now(),\n                            transaction: tx.transaction,\n                            receipt: receipt,\n                            transactionName: tx.transactionName\n                          },\n                          chainId: chainId\n                        });\n                        return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                          receipt: receipt\n                        }));\n                      case 12:\n                        return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                          lastCheckedBlockNumber: blockNumber\n                        }));\n                      case 13:\n                        _context.next = 18;\n                        break;\n                      case 15:\n                        _context.prev = 15;\n                        _context.t0 = _context[\"catch\"](2);\n                        console.error(\"failed to check transaction hash: \".concat(tx.transaction.hash), _context.t0);\n                      case 18:\n                        return _context.abrupt(\"return\", tx);\n                      case 19:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee, null, [[2, 15]]);\n                }))).apply(this, arguments);\n              };\n              chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];\n              newTransactions = [];\n              _iterator = _createForOfIteratorHelper(chainTransactions);\n              _context2.prev = 9;\n              _iterator.s();\n            case 11:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 19;\n                break;\n              }\n              tx = _step.value;\n              _context2.next = 15;\n              return checkTransaction(tx);\n            case 15:\n              newTransaction = _context2.sent;\n              newTransactions.push(newTransaction);\n            case 17:\n              _context2.next = 11;\n              break;\n            case 19:\n              _context2.next = 24;\n              break;\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](9);\n              _iterator.e(_context2.t0);\n            case 24:\n              _context2.prev = 24;\n              _iterator.f();\n              return _context2.finish(24);\n            case 27:\n              if (isMounted()) {\n                dispatch({\n                  type: 'UPDATE_TRANSACTIONS',\n                  chainId: chainId,\n                  transactions: newTransactions\n                });\n              }\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[9, 21, 24, 27]]);\n      }))).apply(this, arguments);\n    };\n    void updateTransactions();\n  }, [chainId, library]);\n  return _jsx(TransactionsContext.Provider, {\n    value: {\n      transactions: transactions,\n      addTransaction: addTransaction,\n      updateTransaction: updateTransaction\n    },\n    children: children\n  });\n}\nfunction shouldCheck(blockNumber, tx) {\n  if (tx.receipt) {\n    return false;\n  }\n  if (!tx.lastCheckedBlockNumber) {\n    return true;\n  }\n  var blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) {\n    return false;\n  }\n  var minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  }\n  // otherwise every block\n  return true;\n}","map":{"version":3,"names":["useCallback","useEffect","useReducer","useEthers","useLocalStorage","useConfig","useIsMounted","useNotificationsContext","TransactionsContext","DEFAULT_STORED_TRANSACTIONS","transactionReducer","TransactionProvider","_ref","children","_useEthers","chainId","library","_useConfig","localStorage","_useLocalStorage","transactionPath","_useLocalStorage2","_slicedToArray","storage","setStorage","_useReducer","_useReducer2","transactions","dispatch","_useNotificationsCont","addNotification","isMounted","addTransaction","payload","type","receipt","status","notification","submittedAt","Date","now","transaction","transactionName","updateTransaction","_ref2","updateTransactions","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_ref3","_a","blockNumber","checkTransaction","chainTransactions","newTransactions","_iterator","_step","tx","newTransaction","wrap","_callee2$","_context2","prev","next","abrupt","getBlockNumber","sent","_x","_callee","_callee$","_context","shouldCheck","getTransactionReceipt","hash","Object","assign","lastCheckedBlockNumber","t0","console","error","concat","stop","apply","arguments","_createForOfIteratorHelper","s","n","done","value","push","e","f","finish","_jsx","Provider","blocksSinceCheck","minutesPending"],"sources":["D:\\CC\\prototype\\node_modules\\@usedapp\\core\\src\\providers\\transactions\\provider.tsx"],"sourcesContent":["import { ReactNode, useCallback, useEffect, useReducer } from 'react'\nimport { useEthers, useLocalStorage, useConfig } from '../../hooks'\nimport { useIsMounted } from '../../hooks/useIsMounted'\nimport { useNotificationsContext } from '../notifications/context'\nimport { TransactionsContext } from './context'\nimport { DEFAULT_STORED_TRANSACTIONS, StoredTransaction, UpdatedTransaction } from './model'\nimport { transactionReducer } from './reducer'\n\ninterface Props {\n  children: ReactNode\n}\n\nexport function TransactionProvider({ children }: Props) {\n  const { chainId, library } = useEthers()\n  const { localStorage } = useConfig()\n  const [storage, setStorage] = useLocalStorage(localStorage.transactionPath)\n  const [transactions, dispatch] = useReducer(transactionReducer, storage ?? DEFAULT_STORED_TRANSACTIONS)\n  const { addNotification } = useNotificationsContext()\n  const isMounted = useIsMounted()\n\n  useEffect(() => {\n    setStorage(transactions)\n  }, [transactions])\n\n  const addTransaction = useCallback(\n    (payload: StoredTransaction) => {\n      if (!isMounted()) {\n        return\n      }\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload,\n      })\n      if (payload.receipt) {\n        const type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed'\n        addNotification({\n          notification: {\n            type,\n            submittedAt: Date.now(),\n            transaction: payload.transaction,\n            receipt: payload.receipt,\n            transactionName: payload.transactionName,\n          },\n          chainId: payload.transaction.chainId,\n        })\n        return\n      }\n      addNotification({\n        notification: {\n          type: 'transactionStarted',\n          transaction: payload.transaction,\n          submittedAt: payload.submittedAt,\n          transactionName: payload.transactionName,\n        },\n        chainId: payload.transaction.chainId,\n      })\n    },\n    [dispatch]\n  )\n\n  const updateTransaction = useCallback(\n    (payload: UpdatedTransaction) => {\n      if (!isMounted()) {\n        return\n      }\n      dispatch({\n        type: 'UPDATE_TRANSACTION',\n        payload,\n      })\n      const type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed'\n      addNotification({\n        notification: {\n          type,\n          submittedAt: Date.now(),\n          transaction: payload.transaction,\n          receipt: payload.receipt,\n          transactionName: payload.transactionName,\n        },\n        chainId: payload.transaction.chainId,\n      })\n    },\n    [dispatch]\n  )\n  useEffect(() => {\n    const updateTransactions = async () => {\n      if (!chainId || !library) return\n\n      const blockNumber = await library.getBlockNumber()\n\n      const checkTransaction = async (tx: StoredTransaction) => {\n        if (tx.receipt || !shouldCheck(blockNumber, tx)) {\n          return tx\n        }\n\n        try {\n          const receipt = await library.getTransactionReceipt(tx.transaction.hash)\n          if (receipt) {\n            const type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed'\n            addNotification({\n              notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: tx.transaction,\n                receipt,\n                transactionName: tx.transactionName,\n              },\n              chainId,\n            })\n\n            return { ...tx, receipt }\n          } else {\n            return { ...tx, lastCheckedBlockNumber: blockNumber }\n          }\n        } catch (error) {\n          console.error(`failed to check transaction hash: ${tx.transaction.hash}`, error)\n        }\n\n        return tx\n      }\n\n      const chainTransactions = transactions[chainId] ?? []\n      const newTransactions: StoredTransaction[] = []\n      for (const tx of chainTransactions) {\n        const newTransaction = await checkTransaction(tx)\n        newTransactions.push(newTransaction)\n      }\n\n      if (isMounted()) {\n        dispatch({ type: 'UPDATE_TRANSACTIONS', chainId, transactions: newTransactions })\n      }\n    }\n\n    void updateTransactions()\n  }, [chainId, library])\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, addTransaction, updateTransaction }} children={children} />\n  )\n}\n\nfunction shouldCheck(blockNumber: number, tx: StoredTransaction): boolean {\n  if (tx.receipt) {\n    return false\n  }\n\n  if (!tx.lastCheckedBlockNumber) {\n    return true\n  }\n\n  const blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) {\n    return false\n  }\n\n  const minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n\n  // otherwise every block\n  return true\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}