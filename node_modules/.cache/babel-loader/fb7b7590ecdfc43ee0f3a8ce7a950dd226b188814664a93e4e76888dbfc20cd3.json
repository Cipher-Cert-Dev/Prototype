{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC\\\\Server\\\\prototype\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n//nodes\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\nimport QRCode from \"qrcode.react\";\nimport styled from \"styled-components\";\nimport { useEthers } from \"@usedapp/core\";\n//\n//user\nimport \"./App.css\";\nimport CONTRACTADDRESS, { APIKEY } from \"./Components/addresses\";\nimport StudentABI from \"./Components/StudentABI.json\";\nimport iconImage from \"./Components/icon.png\";\nimport iconImag from \"./Components/BBT.png\";\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [studentId, setStudentId] = useState(\"\");\n  const [newStudentId, setNewStudentId] = useState(\"\");\n  const [newStudentName, setNewStudentName] = useState(\"\");\n  const [message1, setMessage1] = useState(\"\");\n  const [message, setMessage] = useState(\"Connect-Wallet to Mint the Student\");\n  const [mbulk, setMbulk] = useState(\"\");\n  const [csvResults, setCsvResults] = useState([]);\n  const [transactionHash, setTransactionHash] = useState(\"\");\n  const [tokenadd, setTokenadd] = useState(\"\");\n  const contractAddress = CONTRACTADDRESS;\n  const contractABI = StudentABI;\n  //for connect wallet\n  const {\n    activateBrowserWallet,\n    account,\n    deactivate\n  } = useEthers();\n  async function connectAndActivate() {\n    await connectToEthereum();\n    await activateBrowserWallet();\n  }\n  async function disconnectWallet() {\n    try {\n      await deactivate();\n    } catch (error) {\n      console.error(\"Error disconnecting wallet:\", error);\n    }\n  }\n  async function connectToEthereum() {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setProvider(provider);\n        const contract = new ethers.Contract(contractAddress, contractABI, provider.getSigner());\n        setContract(contract);\n        const signer = provider.getSigner();\n        const from = await signer.getAddress();\n        const domain = window.location.host;\n        const exampleMessage = `${domain} wants you to sign in with your Ethereum account:\\n ${from}\\n\\nI accept the MetaMask Terms of Service: https://community.metamask.io/tos\\n\\nURI: https://${domain}\\nVersion: 1\\nChain ID: 1\\nNonce: 32891757\\nIssued At: 2021-09-30T16:25:24.000Z`;\n        const encoder = new TextEncoder();\n        const data = encoder.encode(exampleMessage);\n        const msg = exampleMessage;\n        const sign = await window.ethereum.request({\n          method: \"personal_sign\",\n          params: [msg, from]\n        });\n        // console.log(\"Personal Sign Result:\", sign);\n        // console.log(\"Contract initialized successfully:\", contract);\n      } else {\n        alert(\"Please install MetaMask or use a Web3-enableder.\");\n      }\n    } catch (error) {\n      alert(\"Error connecting to Ethereum:\", error);\n    }\n  }\n  //\n\n  //for get all list from contract\n  async function getAllStudents() {\n    try {\n      if (contract) {\n        console.log(contract);\n        const totalStudents = await contract.methods.TotalStudents().call();\n        const studentDetails = [];\n        for (let i = 0; i < totalStudents; i++) {\n          const studentId = i;\n          const result = await contract.methods.getStudentDetails(studentId).call();\n          studentDetails.push(`Student ID: ${studentId}, Name: ${result[0]}, ID: ${result[1]}`);\n        }\n        console.log(studentDetails);\n      } else {\n        alert(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error getting students:\", error);\n      alert(\"Error getting students. Check the console for more details.\");\n    }\n  }\n  //for verification\n  async function getStudent() {\n    try {\n      if (contract) {\n        const result = await contract.getStudentDetails(studentId);\n        setMessage(`Student ID:${result[1]} , Name:  ${result[0]}`);\n      } else {\n        alert(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      alert(\"Error getting student:\", error);\n    }\n  } //\n\n  //for bulk\n  async function handleFileUpload(event) {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n    const results = await new Promise(resolve => {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          resolve(results.data);\n        },\n        error: error => {\n          console.error(\"CSV Parsing Error:\", error.message);\n          resolve([]);\n        }\n      });\n    });\n    setCsvResults(results);\n  } //\n\n  //bulk button\n  async function processCSVData() {\n    setMessage(\"Waiting for Mint\");\n    try {\n      if (contract) {\n        for (const student of csvResults) {\n          const {\n            id,\n            name\n          } = student;\n          const tx = await contract.mintStudent(name, id);\n          const receipt = await tx.wait();\n          //api\n          const transactionHash = tx.hash;\n          // const apiKey = APIKEY;\n          // const polygonScanUrl = `https://api.polygonscan.com/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\n          const apiKey = APIKEY;\n          const goerli = `https://api-goerli.etherscan.io/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\n          const response = await axios.get(goerli);\n          setTransactionHash(transactionHash);\n          // console.log(transactionHash);\n          if (response.data.status === \"1\") {\n            setMessage(`Student minted successfully. Token ID: ${receipt.events[0].args.tokenId}`);\n            setTokenadd(receipt.events[0].args.tokenId);\n            setMessage1(`Transaction Hash is : ${transactionHash}`);\n          } else if (response.data.status === \"0\") {\n            setMessage(\"Api execution failed.\");\n          } else {\n            setMessage(\"Transaction status is unknown.\");\n          } //api\n        }\n\n        setMessage(\"Bulk upload successful\");\n      } else {\n        alert(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error adding students:\", error);\n      alert(\"Error adding students. Check the console for more details.\");\n    }\n  } //\n\n  //currently working single upload\n  async function addStudent() {\n    setMessage(\"Waiting for Mint\");\n    try {\n      if (contract) {\n        //function call\n        // axios\n        //   .post(\"/push/students\", { newStudentName, newStudentId })\n        //   .then((response) => {\n        //     console.log(response.data.message);\n        //   })\n        //   .catch((error) => {\n        //     console.error(\"Error:\", error);\n        //   });\n        const tx = await contract.mintStudent(newStudentName, newStudentId);\n        const receipt = await tx.wait();\n        setMessage(\"Student minted successfully.\");\n        //api\n        const transactionHash = tx.hash;\n        // const apiKey = APIKEY;\n        // const polygonScanUrl = `https://api.polygonscan.com/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\n        const apiKey = APIKEY;\n        const goerli = `https://api-goerli.etherscan.io/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\n        const response = await axios.get(goerli);\n        setTransactionHash(transactionHash);\n        // console.log(transactionHash);\n        if (response.data.status === \"1\") {\n          setMessage(`Student minted successfully. Token ID: ${receipt.events[0].args.tokenId}`);\n          setTokenadd(receipt.events[0].args.tokenId);\n          setMessage1(`Transaction Hash is : ${transactionHash}`);\n        } else if (response.data.status === \"0\") {\n          setMessage(\"Api execution failed.\");\n        } else {\n          setMessage(\"Transaction status is unknown.\");\n        } //api\n      } else {\n        alert(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error adding student:\", error);\n    }\n  }\n  //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconImage,\n        alt: \"Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CIPHER CERT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(CButton, {\n      onClick: () => disconnectWallet(),\n      children: [account.slice(0, 4), \"...\", account.slice(account.length - 4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CButton, {\n      onClick: () => connectAndActivate(),\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Issuance Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Overlay, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Single upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Student ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newStudentId,\n            onChange: e => setNewStudentId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newStudentName,\n            onChange: e => setNewStudentName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addStudent,\n            children: \"Add-Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          children: /*#__PURE__*/_jsxDEV(Dis, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"qr\",\n              children: transactionHash && /*#__PURE__*/_jsxDEV(QRCode, {\n                value: `https://goerli.etherscan.io/tx/${transactionHash}`,\n                renderAs: \"svg\",\n                size: 128\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Bulk upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: processCSVData,\n            children: \"Add-Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dis, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mbulk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconImag,\n        alt: \"Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Copyright \\xA9 2023 - Byte Blitz Tech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r1YYfWvAj6VXqqPqLJQBqChKW/c=\", false, function () {\n  return [useEthers];\n});\n_c = App;\nexport default App;\nconst CButton = styled.button`\n  cursor: pointer;\n  padding: 0.7rem 2rem;\n  background-color: grey;\n  border-radius: 50px;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n  margin-left: 7rem;\n`;\n_c2 = CButton;\nconst Dis = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1280px;\n  width: 80%;\n  margin: 0 auto;\n  padding: 1.5rem 0;\n  position: relative;\n  flex-direction: column;\n  flex-wrap: nowrap;\n`;\n_c3 = Dis;\nconst Footer = styled.footer`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 100;\n  img {\n    height: 70px;\n    width: 70px;\n  }\n`;\n//\n_c4 = Footer;\nconst Content = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: column;\n  align-items: flex-start;\n  button {\n    cursor: pointer;\n    margin-top: 1rem;\n    padding: 0.2rem 2rem;\n    background-color: black;\n    border-radius: 50px;\n    color: rgb(255, 255, 255);\n  }\n`;\n_c5 = Content;\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c6 = Container;\nconst Overlay = styled.div`\n  width: 20%;\n  padding: 20px;\n  border-radius: 25px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    width: 70%;\n    margin-bottom: 1rem;\n  }\n`;\n_c7 = Overlay;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CButton\");\n$RefreshReg$(_c3, \"Dis\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Container\");\n$RefreshReg$(_c7, \"Overlay\");","map":{"version":3,"names":["React","useState","ethers","Papa","axios","QRCode","styled","useEthers","CONTRACTADDRESS","APIKEY","StudentABI","iconImage","iconImag","jsxDEV","_jsxDEV","App","_s","provider","setProvider","contract","setContract","studentId","setStudentId","newStudentId","setNewStudentId","newStudentName","setNewStudentName","message1","setMessage1","message","setMessage","mbulk","setMbulk","csvResults","setCsvResults","transactionHash","setTransactionHash","tokenadd","setTokenadd","contractAddress","contractABI","activateBrowserWallet","account","deactivate","connectAndActivate","connectToEthereum","disconnectWallet","error","console","window","ethereum","providers","Web3Provider","request","method","Contract","getSigner","signer","from","getAddress","domain","location","host","exampleMessage","encoder","TextEncoder","data","encode","msg","sign","params","alert","getAllStudents","log","totalStudents","methods","TotalStudents","call","studentDetails","i","result","getStudentDetails","push","getStudent","handleFileUpload","event","file","target","files","results","Promise","resolve","parse","header","skipEmptyLines","complete","processCSVData","student","id","name","tx","mintStudent","receipt","wait","hash","apiKey","goerli","response","get","status","events","args","tokenId","addStudent","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","CButton","onClick","slice","length","Container","Overlay","Content","type","value","onChange","e","Dis","renderAs","size","accept","Footer","_c","button","_c2","div","_c3","footer","_c4","_c5","_c6","_c7","$RefreshReg$"],"sources":["D:/CC/Server/prototype/src/App.jsx"],"sourcesContent":["//nodes\r\nimport React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Papa from \"papaparse\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\nimport styled from \"styled-components\";\r\nimport { useEthers } from \"@usedapp/core\";\r\n//\r\n//user\r\nimport \"./App.css\";\r\nimport CONTRACTADDRESS, { APIKEY } from \"./Components/addresses\";\r\nimport StudentABI from \"./Components/StudentABI.json\";\r\nimport iconImage from \"./Components/icon.png\";\r\nimport iconImag from \"./Components/BBT.png\";\r\n//\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const [newStudentId, setNewStudentId] = useState(\"\");\r\n  const [newStudentName, setNewStudentName] = useState(\"\");\r\n  const [message1, setMessage1] = useState(\"\");\r\n  const [message, setMessage] = useState(\"Connect-Wallet to Mint the Student\");\r\n  const [mbulk, setMbulk] = useState(\"\");\r\n  const [csvResults, setCsvResults] = useState([]);\r\n  const [transactionHash, setTransactionHash] = useState(\"\");\r\n  const [tokenadd, setTokenadd] = useState(\"\");\r\n\r\n  const contractAddress = CONTRACTADDRESS;\r\n  const contractABI = StudentABI;\r\n  //for connect wallet\r\n  const { activateBrowserWallet, account, deactivate } = useEthers();\r\n  async function connectAndActivate() {\r\n    await connectToEthereum();\r\n    await activateBrowserWallet();\r\n  }\r\n  async function disconnectWallet() {\r\n    try {\r\n      await deactivate();\r\n    } catch (error) {\r\n      console.error(\"Error disconnecting wallet:\", error);\r\n    }\r\n  }\r\n  async function connectToEthereum() {\r\n    try {\r\n      if (window.ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        setProvider(provider);\r\n\r\n        const contract = new ethers.Contract(\r\n          contractAddress,\r\n          contractABI,\r\n          provider.getSigner()\r\n        );\r\n        setContract(contract);\r\n\r\n        const signer = provider.getSigner();\r\n        const from = await signer.getAddress();\r\n        const domain = window.location.host;\r\n        const exampleMessage = `${domain} wants you to sign in with your Ethereum account:\\n ${from}\\n\\nI accept the MetaMask Terms of Service: https://community.metamask.io/tos\\n\\nURI: https://${domain}\\nVersion: 1\\nChain ID: 1\\nNonce: 32891757\\nIssued At: 2021-09-30T16:25:24.000Z`;\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(exampleMessage);\r\n        const msg = exampleMessage;\r\n        const sign = await window.ethereum.request({\r\n          method: \"personal_sign\",\r\n          params: [msg, from],\r\n        });\r\n        // console.log(\"Personal Sign Result:\", sign);\r\n        // console.log(\"Contract initialized successfully:\", contract);\r\n      } else {\r\n        alert(\"Please install MetaMask or use a Web3-enableder.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error connecting to Ethereum:\", error);\r\n    }\r\n  }\r\n  //\r\n\r\n  //for get all list from contract\r\n  async function getAllStudents() {\r\n    try {\r\n      if (contract) {\r\n        console.log(contract);\r\n        const totalStudents = await contract.methods.TotalStudents().call();\r\n        const studentDetails = [];\r\n\r\n        for (let i = 0; i < totalStudents; i++) {\r\n          const studentId = i;\r\n          const result = await contract.methods\r\n            .getStudentDetails(studentId)\r\n            .call();\r\n          studentDetails.push(\r\n            `Student ID: ${studentId}, Name: ${result[0]}, ID: ${result[1]}`\r\n          );\r\n        }\r\n        console.log(studentDetails);\r\n      } else {\r\n        alert(\"Contract not initialized.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting students:\", error);\r\n      alert(\"Error getting students. Check the console for more details.\");\r\n    }\r\n  }\r\n  //for verification\r\n  async function getStudent() {\r\n    try {\r\n      if (contract) {\r\n        const result = await contract.getStudentDetails(studentId);\r\n        setMessage(`Student ID:${result[1]} , Name:  ${result[0]}`);\r\n      } else {\r\n        alert(\"Contract not initialized.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error getting student:\", error);\r\n    }\r\n  } //\r\n\r\n  //for bulk\r\n  async function handleFileUpload(event) {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const results = await new Promise((resolve) => {\r\n      Papa.parse(file, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (results) => {\r\n          resolve(results.data);\r\n        },\r\n        error: (error) => {\r\n          console.error(\"CSV Parsing Error:\", error.message);\r\n          resolve([]);\r\n        },\r\n      });\r\n    });\r\n    setCsvResults(results);\r\n  } //\r\n\r\n  //bulk button\r\n  async function processCSVData() {\r\n    setMessage(\"Waiting for Mint\");\r\n    try {\r\n      if (contract) {\r\n        for (const student of csvResults) {\r\n          const { id, name } = student;\r\n          const tx = await contract.mintStudent(name, id);\r\n          const receipt = await tx.wait();\r\n          //api\r\n          const transactionHash = tx.hash;\r\n          // const apiKey = APIKEY;\r\n          // const polygonScanUrl = `https://api.polygonscan.com/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\r\n          const apiKey = APIKEY;\r\n          const goerli = `https://api-goerli.etherscan.io/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\r\n          const response = await axios.get(goerli);\r\n          setTransactionHash(transactionHash);\r\n          // console.log(transactionHash);\r\n          if (response.data.status === \"1\") {\r\n            setMessage(\r\n              `Student minted successfully. Token ID: ${receipt.events[0].args.tokenId}`\r\n            );\r\n            setTokenadd(receipt.events[0].args.tokenId);\r\n            setMessage1(`Transaction Hash is : ${transactionHash}`);\r\n          } else if (response.data.status === \"0\") {\r\n            setMessage(\"Api execution failed.\");\r\n          } else {\r\n            setMessage(\"Transaction status is unknown.\");\r\n          } //api\r\n        }\r\n        setMessage(\"Bulk upload successful\");\r\n      } else {\r\n        alert(\"Contract not initialized.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding students:\", error);\r\n      alert(\"Error adding students. Check the console for more details.\");\r\n    }\r\n  } //\r\n\r\n  //currently working single upload\r\n  async function addStudent() {\r\n    setMessage(\"Waiting for Mint\");\r\n    try {\r\n      if (contract) {\r\n        //function call\r\n        // axios\r\n        //   .post(\"/push/students\", { newStudentName, newStudentId })\r\n        //   .then((response) => {\r\n        //     console.log(response.data.message);\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     console.error(\"Error:\", error);\r\n        //   });\r\n        const tx = await contract.mintStudent(newStudentName, newStudentId);\r\n        const receipt = await tx.wait();\r\n        setMessage(\"Student minted successfully.\");\r\n        //api\r\n        const transactionHash = tx.hash;\r\n        // const apiKey = APIKEY;\r\n        // const polygonScanUrl = `https://api.polygonscan.com/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\r\n        const apiKey = APIKEY;\r\n        const goerli = `https://api-goerli.etherscan.io/api?module=transaction&action=gettxreceiptstatus&txhash=${transactionHash}&apikey=${apiKey}`;\r\n        const response = await axios.get(goerli);\r\n        setTransactionHash(transactionHash);\r\n        // console.log(transactionHash);\r\n        if (response.data.status === \"1\") {\r\n          setMessage(\r\n            `Student minted successfully. Token ID: ${receipt.events[0].args.tokenId}`\r\n          );\r\n          setTokenadd(receipt.events[0].args.tokenId);\r\n          setMessage1(`Transaction Hash is : ${transactionHash}`);\r\n        } else if (response.data.status === \"0\") {\r\n          setMessage(\"Api execution failed.\");\r\n        } else {\r\n          setMessage(\"Transaction status is unknown.\");\r\n        } //api\r\n      } else {\r\n        alert(\"Contract not initialized.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding student:\", error);\r\n    }\r\n  }\r\n  //\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <footer>\r\n        <img src={iconImage} alt=\"Icon\" />\r\n        <h1>CIPHER CERT</h1>\r\n      </footer>\r\n\r\n      {account ? (\r\n        <CButton onClick={() => disconnectWallet()}>\r\n          {account.slice(0, 4)}...{account.slice(account.length - 4)}\r\n        </CButton>\r\n      ) : (\r\n        <CButton onClick={() => connectAndActivate()}>Connect Wallet</CButton>\r\n      )}\r\n\r\n      <h1>Issuance Portal</h1>\r\n      <Container>\r\n        <Overlay>\r\n          <Content>\r\n            <h2>Single upload</h2>\r\n            <label>Student ID</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newStudentId}\r\n              onChange={(e) => setNewStudentId(e.target.value)}\r\n            />\r\n            <label>Student Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newStudentName}\r\n              onChange={(e) => setNewStudentName(e.target.value)}\r\n            />\r\n            <button onClick={addStudent}>Add-Student</button>\r\n          </Content>\r\n        </Overlay>\r\n        <Overlay>\r\n          <Content>\r\n            <Dis>\r\n              <div id=\"qr\">\r\n                {transactionHash && (\r\n                  <QRCode\r\n                    value={`https://goerli.etherscan.io/tx/${transactionHash}`}\r\n                    renderAs=\"svg\"\r\n                    size={128}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Dis>\r\n          </Content>\r\n        </Overlay>\r\n        <Overlay>\r\n          <Content>\r\n            <h2>Bulk upload</h2>\r\n            <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n            <button onClick={processCSVData}>Add-Student</button>\r\n          </Content>\r\n        </Overlay>\r\n      </Container>\r\n      <Dis>\r\n        <p>{message}</p>\r\n        <p>{message1}</p>\r\n        <p>{mbulk}</p>\r\n      </Dis>\r\n\r\n      <Footer>\r\n        <img src={iconImag} alt=\"Icon\" />\r\n        <h3>Copyright © 2023 - Byte Blitz Tech</h3>\r\n      </Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst CButton = styled.button`\r\n  cursor: pointer;\r\n  padding: 0.7rem 2rem;\r\n  background-color: grey;\r\n  border-radius: 50px;\r\n  color: rgb(255, 255, 255);\r\n  font-weight: 500;\r\n  margin-left: 7rem;\r\n`;\r\n\r\nconst Dis = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 1280px;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 1.5rem 0;\r\n  position: relative;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  z-index: 100;\r\n  img {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n`;\r\n//\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  button {\r\n    cursor: pointer;\r\n    margin-top: 1rem;\r\n    padding: 0.2rem 2rem;\r\n    background-color: black;\r\n    border-radius: 50px;\r\n    color: rgb(255, 255, 255);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  height: auto;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  width: 20%;\r\n  padding: 20px;\r\n  border-radius: 25px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 70%;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}