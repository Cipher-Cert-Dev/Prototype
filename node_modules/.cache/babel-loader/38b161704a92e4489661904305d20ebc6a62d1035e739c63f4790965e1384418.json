{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _getInjectedProvider;\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { providers } from 'ethers';\nimport { isWebSocketProvider } from './isWebSocketProvider';\nvar GET_METAMASK_LINK = 'https://metamask.io/download.html';\nexport function getInjectedProvider(_x) {\n  return (_getInjectedProvider = _getInjectedProvider || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(getPollingInterval) {\n    var _a, injectedProviders, injectedProvider, provider, chainId;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (window.ethereum) {\n            _context.next = 3;\n            break;\n          }\n          window.open(GET_METAMASK_LINK);\n          return _context.abrupt(\"return\", undefined);\n        case 3:\n          injectedProviders = (window === null || window === void 0 ? void 0 : window.ethereum.providers) || [];\n          if (!((_a = injectedProviders.find(function (provider) {\n            var _a;\n            return (_a = provider.isMetaMask) !== null && _a !== void 0 ? _a : false;\n          })) !== null && _a !== void 0)) {\n            _context.next = 8;\n            break;\n          }\n          _context.t0 = _a;\n          _context.next = 11;\n          break;\n        case 8:\n          _context.next = 10;\n          return detectEthereumProvider();\n        case 10:\n          _context.t0 = _context.sent;\n        case 11:\n          injectedProvider = _context.t0;\n          if (injectedProvider) {\n            _context.next = 15;\n            break;\n          }\n          window.open(GET_METAMASK_LINK);\n          return _context.abrupt(\"return\", undefined);\n        case 15:\n          provider = new providers.Web3Provider(injectedProvider, 'any');\n          _context.next = 18;\n          return provider.send('eth_chainId', []);\n        case 18:\n          chainId = _context.sent;\n          if (!isWebSocketProvider(provider)) {\n            provider.pollingInterval = getPollingInterval(chainId);\n          }\n          return _context.abrupt(\"return\", provider);\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}","map":{"version":3,"names":["detectEthereumProvider","providers","isWebSocketProvider","GET_METAMASK_LINK","getInjectedProvider","_x","_getInjectedProvider","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getPollingInterval","_a","injectedProviders","injectedProvider","provider","chainId","wrap","_callee$","_context","prev","next","window","ethereum","open","abrupt","undefined","find","isMetaMask","t0","sent","Web3Provider","send","pollingInterval","stop","apply","arguments"],"sources":["D:\\CC\\Server\\prototype\\node_modules\\@usedapp\\core\\src\\helpers\\injectedProvider.ts"],"sourcesContent":["import detectEthereumProvider from '@metamask/detect-provider'\nimport { providers } from 'ethers'\nimport { isWebSocketProvider } from './isWebSocketProvider'\n\nconst GET_METAMASK_LINK = 'https://metamask.io/download.html'\n\nexport async function getInjectedProvider(getPollingInterval: (chaindId: number) => number) {\n  if (!(window as any).ethereum) {\n    window.open(GET_METAMASK_LINK)\n    return undefined\n  }\n\n  const injectedProviders: any[] = (window as any)?.ethereum.providers || []\n  const injectedProvider: any =\n    injectedProviders.find((provider) => {\n      return provider.isMetaMask ?? false\n    }) ?? (await detectEthereumProvider())\n\n  if (!injectedProvider) {\n    window.open(GET_METAMASK_LINK)\n    return undefined\n  }\n\n  const provider = new providers.Web3Provider(injectedProvider, 'any')\n  const chainId = await provider.send('eth_chainId', [])\n  if (!isWebSocketProvider(provider)) {\n    provider.pollingInterval = getPollingInterval(chainId)\n  }\n  return provider\n}\n"],"mappings":";;;AAAA,OAAOA,sBAAsB,MAAM,2BAA2B;AAC9D,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,IAAMC,iBAAiB,GAAG,mCAAmC;AAE7D,gBAAsBC,mBAAmBA,CAAAC,EAAA;EAAA,QAAAC,oBAAA,GAAAA,oBAAA,IAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAlC,SAAAC,QAAmCC,kBAAgD;IAAA,IAAAC,EAAA,EAAAC,iBAAA,EAAAC,gBAAA,EAAAC,QAAA,EAAAC,OAAA;IAAA,OAAAR,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,IAClFC,MAAc,CAACC,QAAQ;YAAAJ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAC3BC,MAAM,CAACE,IAAI,CAACrB,iBAAiB,CAAC;UAAA,OAAAgB,QAAA,CAAAM,MAAA,WACvBC,SAAS;QAAA;UAGZb,iBAAiB,GAAU,CAACS,MAAc,aAAdA,MAAM,uBAANA,MAAM,CAAUC,QAAQ,CAACtB,SAAS,KAAI,EAAE;UAAA,MAExE,CAAAW,EAAA,GAAAC,iBAAiB,CAACc,IAAI,CAAC,UAACZ,QAAQ,EAAI;;YAClC,OAAO,CAAAH,EAAA,GAAAG,QAAQ,CAACa,UAAU,cAAAhB,EAAA,cAAAA,EAAA,GAAI,KAAK;UACrC,CAAC,CAAC,cAAAA,EAAA;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAU,EAAA,GAAAjB,EAAA;UAAAO,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAWrB,sBAAsB,EAAE;QAAA;UAAAmB,QAAA,CAAAU,EAAA,GAAAV,QAAA,CAAAW,IAAA;QAAA;UAHjChB,gBAAgB,GAAAK,QAAA,CAAAU,EAAA;UAAA,IAKjBf,gBAAgB;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UACnBC,MAAM,CAACE,IAAI,CAACrB,iBAAiB,CAAC;UAAA,OAAAgB,QAAA,CAAAM,MAAA,WACvBC,SAAS;QAAA;UAGZX,QAAQ,GAAG,IAAId,SAAS,CAAC8B,YAAY,CAACjB,gBAAgB,EAAE,KAAK,CAAC;UAAAK,QAAA,CAAAE,IAAA;UAAA,OAC9CN,QAAQ,CAACiB,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;QAAA;UAAhDhB,OAAO,GAAAG,QAAA,CAAAW,IAAA;UACb,IAAI,CAAC5B,mBAAmB,CAACa,QAAQ,CAAC,EAAE;YAClCA,QAAQ,CAACkB,eAAe,GAAGtB,kBAAkB,CAACK,OAAO,CAAC;;UACvD,OAAAG,QAAA,CAAAM,MAAA,WACMV,QAAQ;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAAxB,OAAA;EAAA,CAChB,IAAAyB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}