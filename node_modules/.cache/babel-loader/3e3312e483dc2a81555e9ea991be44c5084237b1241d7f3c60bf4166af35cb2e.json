{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _pbkdf;\nimport { pbkdf2 as _pbkdf2, pbkdf2Async as _pbkdf2Async } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { assertBytes } from \"./utils.js\";\nexport function pbkdf2(_x, _x2, _x3, _x4, _x5) {\n  return (_pbkdf = _pbkdf || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(password, salt, iterations, keylen, digest) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if ([\"sha256\", \"sha512\"].includes(digest)) {\n            _context.next = 2;\n            break;\n          }\n          throw new Error(\"Only sha256 and sha512 are supported\");\n        case 2:\n          assertBytes(password);\n          assertBytes(salt);\n          return _context.abrupt(\"return\", _pbkdf2Async(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n            c: iterations,\n            dkLen: keylen\n          }));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, digest) {\n  if (![\"sha256\", \"sha512\"].includes(digest)) {\n    throw new Error(\"Only sha256 and sha512 are supported\");\n  }\n  assertBytes(password);\n  assertBytes(salt);\n  return _pbkdf2(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}","map":{"version":3,"names":["pbkdf2","_pbkdf2","pbkdf2Async","_pbkdf2Async","sha256","sha512","assertBytes","_x","_x2","_x3","_x4","_x5","_pbkdf","_asyncToGenerator","_regeneratorRuntime","mark","_callee","password","salt","iterations","keylen","digest","wrap","_callee$","_context","prev","next","includes","Error","abrupt","c","dkLen","stop","apply","arguments","pbkdf2Sync"],"sources":["D:/CC/test/node_modules/ethereum-cryptography/esm/pbkdf2.js"],"sourcesContent":["import { pbkdf2 as _pbkdf2, pbkdf2Async as _pbkdf2Async } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { assertBytes } from \"./utils.js\";\nexport async function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    assertBytes(password);\n    assertBytes(salt);\n    return _pbkdf2Async(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    assertBytes(password);\n    assertBytes(salt);\n    return _pbkdf2(digest === \"sha256\" ? sha256 : sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\n"],"mappings":";;;AAAA,SAASA,MAAM,IAAIC,OAAO,EAAEC,WAAW,IAAIC,YAAY,QAAQ,sBAAsB;AACrF,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,WAAW,QAAQ,YAAY;AACxC,gBAAsBN,MAAMA,CAAAO,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,QAAAC,MAAA,GAAAA,MAAA,IAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAC,QAAsBC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,IAC9D,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACN,MAAM,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAChC,IAAIE,KAAK,CAAC,sCAAsC,CAAC;QAAA;UAE3DtB,WAAW,CAACW,QAAQ,CAAC;UACrBX,WAAW,CAACY,IAAI,CAAC;UAAC,OAAAM,QAAA,CAAAK,MAAA,WACX1B,YAAY,CAACkB,MAAM,KAAK,QAAQ,GAAGjB,MAAM,GAAGC,MAAM,EAAEY,QAAQ,EAAEC,IAAI,EAAE;YACvEY,CAAC,EAAEX,UAAU;YACbY,KAAK,EAAEX;UACX,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAhB,OAAA;EAAA,CACL,IAAAiB,KAAA,OAAAC,SAAA;AAAA;AACD,OAAO,SAASC,UAAUA,CAAClB,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACnE,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACM,QAAQ,CAACN,MAAM,CAAC,EAAE;IACxC,MAAM,IAAIO,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACAtB,WAAW,CAACW,QAAQ,CAAC;EACrBX,WAAW,CAACY,IAAI,CAAC;EACjB,OAAOjB,OAAO,CAACoB,MAAM,KAAK,QAAQ,GAAGjB,MAAM,GAAGC,MAAM,EAAEY,QAAQ,EAAEC,IAAI,EAAE;IAClEY,CAAC,EAAEX,UAAU;IACbY,KAAK,EAAEX;EACX,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}