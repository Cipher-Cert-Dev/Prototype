{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { providers } from 'ethers';\nimport { Event } from '../../../../helpers/event';\nexport var InjectedConnector = /*#__PURE__*/function (_connectEagerly, _activate, _deactivate) {\n  function InjectedConnector(provider) {\n    _classCallCheck(this, InjectedConnector);\n    this.name = 'Injected';\n    this.update = new Event();\n    this.provider = providers.Provider.isProvider(provider) ? provider : new providers.Web3Provider(provider);\n  }\n  _createClass(InjectedConnector, [{\n    key: \"connectEagerly\",\n    value: function connectEagerly() {\n      return (_connectEagerly = _connectEagerly || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var chainId, accounts;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (this.provider) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return this.provider.send('eth_chainId', []);\n            case 5:\n              chainId = _context.sent;\n              _context.next = 8;\n              return this.provider.send('eth_accounts', []);\n            case 8:\n              accounts = _context.sent;\n              this.update.emit({\n                chainId: parseInt(chainId),\n                accounts: accounts\n              });\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              console.debug(_context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 12]]);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      return (_activate = _activate || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var chainId, accounts;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.provider) {\n                _context2.next = 2;\n                break;\n              }\n              throw new Error('Could not activate connector');\n            case 2:\n              _context2.prev = 2;\n              _context2.next = 5;\n              return this.provider.send('eth_chainId', []);\n            case 5:\n              chainId = _context2.sent;\n              _context2.next = 8;\n              return this.provider.send('eth_accounts', []);\n            case 8:\n              accounts = _context2.sent;\n              this.update.emit({\n                chainId: parseInt(chainId),\n                accounts: accounts\n              });\n              _context2.next = 16;\n              break;\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              throw new Error('Could not activate connector');\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 12]]);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      return (_deactivate = _deactivate || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.provider = undefined;\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }))).apply(this, arguments);\n    }\n  }]);\n  return InjectedConnector;\n}();","map":{"version":3,"names":["providers","Event","InjectedConnector","_connectEagerly","_activate","_deactivate","provider","_classCallCheck","name","update","Provider","isProvider","Web3Provider","_createClass","key","value","connectEagerly","_asyncToGenerator","_regeneratorRuntime","mark","_callee","chainId","accounts","wrap","_callee$","_context","prev","next","abrupt","send","sent","emit","parseInt","t0","console","debug","stop","apply","arguments","activate","_callee2","_callee2$","_context2","Error","log","deactivate","_callee3","_callee3$","_context3","undefined"],"sources":["D:\\CC\\prototype\\node_modules\\@usedapp\\core\\src\\providers\\network\\connectors\\implementations\\injected.ts"],"sourcesContent":["import { providers } from 'ethers'\nimport { Connector, ConnectorUpdateData } from '../connector'\nimport { Event } from '../../../../helpers/event'\n\nexport class InjectedConnector implements Connector {\n  public provider?: providers.Web3Provider | providers.JsonRpcProvider\n  public readonly name = 'Injected'\n\n  readonly update = new Event<ConnectorUpdateData>()\n\n  constructor(provider: providers.ExternalProvider | providers.Web3Provider | providers.JsonRpcProvider) {\n    this.provider = providers.Provider.isProvider(provider) ? provider : new providers.Web3Provider(provider)\n  }\n\n  async connectEagerly(): Promise<void> {\n    if (!this.provider) {\n      return\n    }\n\n    try {\n      const chainId: string = await this.provider!.send('eth_chainId', [])\n      const accounts: string[] = await this.provider!.send('eth_accounts', [])\n      this.update.emit({ chainId: parseInt(chainId), accounts })\n    } catch (error) {\n      console.debug(error)\n    }\n  }\n\n  async activate(): Promise<void> {\n    if (!this.provider) {\n      throw new Error('Could not activate connector')\n    }\n\n    try {\n      const chainId: string = await this.provider!.send('eth_chainId', [])\n      const accounts: string[] = await this.provider!.send('eth_accounts', [])\n      this.update.emit({ chainId: parseInt(chainId), accounts })\n    } catch (error) {\n      console.log(error)\n      throw new Error('Could not activate connector')\n    }\n  }\n\n  async deactivate(): Promise<void> {\n    this.provider = undefined\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}