{"ast":null,"code":"import _slicedToArray from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _estimateTransactionGasLimit, _estimateContractFunctionGasLimit, _isNonContractWallet;\nimport { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\nimport { buildSafeTransaction, getLatestNonce } from '../helpers/gnosisSafeUtils';\nimport { useEthers } from './useEthers';\nimport { waitForSafeTransaction } from '../helpers/gnosisSafeUtils';\nimport { useGnosisSafeContract } from './useGnosisSafeContract';\n/**\n * @internal\n */\nexport function estimateTransactionGasLimit(_x, _x2, _x3) {\n  return (_estimateTransactionGasLimit = _estimateTransactionGasLimit || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(transactionRequest, signer, gasLimitBufferPercentage) {\n    var estimatedGas;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!signer || !transactionRequest)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", undefined);\n        case 2:\n          _context.prev = 2;\n          if (!transactionRequest.gasLimit) {\n            _context.next = 7;\n            break;\n          }\n          _context.t0 = BigNumber.from(transactionRequest.gasLimit);\n          _context.next = 10;\n          break;\n        case 7:\n          _context.next = 9;\n          return signer.estimateGas(transactionRequest);\n        case 9:\n          _context.t0 = _context.sent;\n        case 10:\n          estimatedGas = _context.t0;\n          return _context.abrupt(\"return\", estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100));\n        case 14:\n          _context.prev = 14;\n          _context.t1 = _context[\"catch\"](2);\n          console.error(_context.t1);\n          return _context.abrupt(\"return\", undefined);\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 14]]);\n  }))).apply(this, arguments);\n}\n/**\n * @internal\n */\nexport function estimateContractFunctionGasLimit(_x4, _x5, _x6, _x7) {\n  return (_estimateContractFunctionGasLimit = _estimateContractFunctionGasLimit || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n    var _contractWithSigner$e, estimatedGas, gasLimit;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return (_contractWithSigner$e = contractWithSigner.estimateGas)[functionName].apply(_contractWithSigner$e, _toConsumableArray(args));\n        case 3:\n          estimatedGas = _context2.sent;\n          gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n          return _context2.abrupt(\"return\", gasLimit);\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          return _context2.abrupt(\"return\", undefined);\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 8]]);\n  }))).apply(this, arguments);\n}\n/**\n * @internal\n */\nfunction isNonContractWallet(_x8, _x9) {\n  return (_isNonContractWallet = _isNonContractWallet || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(library, address) {\n    var code;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(!library || !address)) {\n            _context3.next = 2;\n            break;\n          }\n          return _context3.abrupt(\"return\", true);\n        case 2:\n          _context3.next = 4;\n          return library.getCode(address);\n        case 4:\n          code = _context3.sent;\n          return _context3.abrupt(\"return\", code === '0x');\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }))).apply(this, arguments);\n}\nvar isDroppedAndReplaced = function isDroppedAndReplaced(e) {\n  return (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\n};\nexport function usePromiseTransaction(chainId, options) {\n  var _ref2;\n  var _useState = useState({\n      status: 'None',\n      transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useTransactionsConte = useTransactionsContext(),\n    addTransaction = _useTransactionsConte.addTransaction,\n    updateTransaction = _useTransactionsConte.updateTransaction;\n  var _useNotificationsCont = useNotificationsContext(),\n    addNotification = _useNotificationsCont.addNotification;\n  var _useEthers = useEthers(),\n    library = _useEthers.library,\n    account = _useEthers.account;\n  var gnosisSafe = useGnosisSafeContract(account, library);\n  var resetState = useCallback(function () {\n    setState(function (_ref) {\n      var transactionName = _ref.transactionName;\n      return {\n        status: 'None',\n        transactionName: transactionName\n      };\n    });\n  }, [setState]);\n  var promiseTransaction = useCallback(function (_x10) {\n    return (_ref2 = _ref2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(transactionPromise) {\n      var _ref4, _ref6;\n      var _ref3,\n        safeTransaction,\n        transactionRequest,\n        _a,\n        _b,\n        _c,\n        _d,\n        _e,\n        _f,\n        _g,\n        _h,\n        _j,\n        _k,\n        _l,\n        _m,\n        _o,\n        _p,\n        _q,\n        _r,\n        _s,\n        _t,\n        _u,\n        _v,\n        _w,\n        handleNonContractWallet,\n        handleContractWallet,\n        transaction,\n        isContractWallet,\n        result,\n        _result,\n        parsedErrorCode,\n        errorCode,\n        errorHash,\n        errorMessage,\n        droppedAndReplaced,\n        status,\n        type,\n        _args6 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref3 = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, safeTransaction = _ref3.safeTransaction;\n            transactionRequest = _args6.length > 2 ? _args6[2] : undefined;\n            handleNonContractWallet = function handleNonContractWallet(_x11) {\n              return (_ref4 = _ref4 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(transaction) {\n                var receipt;\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      if (chainId) {\n                        _context4.next = 2;\n                        break;\n                      }\n                      return _context4.abrupt(\"return\");\n                    case 2:\n                      setState(function (_ref5) {\n                        var transactionName = _ref5.transactionName;\n                        return {\n                          transactionName: transactionName,\n                          transaction: transaction,\n                          status: 'Mining'\n                        };\n                      });\n                      addTransaction({\n                        transaction: Object.assign(Object.assign({}, transaction), {\n                          chainId: chainId\n                        }),\n                        submittedAt: Date.now(),\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      _context4.next = 6;\n                      return transaction.wait();\n                    case 6:\n                      receipt = _context4.sent;\n                      updateTransaction({\n                        transaction: Object.assign(Object.assign({}, transaction), {\n                          chainId: chainId\n                        }),\n                        receipt: receipt,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      setState({\n                        receipt: receipt,\n                        transaction: transaction,\n                        status: 'Success',\n                        chainId: chainId,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      return _context4.abrupt(\"return\", {\n                        transaction: transaction,\n                        receipt: receipt\n                      });\n                    case 10:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              }))).apply(this, arguments);\n            };\n            handleContractWallet = function handleContractWallet(_x12) {\n              return (_ref6 = _ref6 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(transactionPromise) {\n                var _ref7,\n                  safeTransaction,\n                  _a,\n                  gnosisSafeContract,\n                  latestNonce,\n                  safeTx,\n                  _yield$waitForSafeTra,\n                  transaction,\n                  receipt,\n                  rejected,\n                  errorMessage,\n                  _args5 = arguments;\n                return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _ref7 = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {}, safeTransaction = _ref7.safeTransaction;\n                      if (!(!chainId || !library || !account)) {\n                        _context5.next = 3;\n                        break;\n                      }\n                      return _context5.abrupt(\"return\");\n                    case 3:\n                      setState({\n                        status: 'CollectingSignaturePool',\n                        chainId: chainId,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      gnosisSafeContract = gnosisSafe.get();\n                      if (gnosisSafeContract) {\n                        _context5.next = 7;\n                        break;\n                      }\n                      throw new Error(\"Couldn't create Gnosis Safe contract instance\");\n                    case 7:\n                      _context5.next = 9;\n                      return getLatestNonce(chainId, account);\n                    case 9:\n                      latestNonce = _context5.sent;\n                      _context5.t0 = buildSafeTransaction;\n                      _context5.t1 = (_a = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.to) !== null && _a !== void 0 ? _a : '';\n                      _context5.t2 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.value;\n                      _context5.t3 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.data;\n                      _context5.t4 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.safeTxGas;\n                      if (!latestNonce) {\n                        _context5.next = 19;\n                        break;\n                      }\n                      _context5.t5 = latestNonce + 1;\n                      _context5.next = 22;\n                      break;\n                    case 19:\n                      _context5.next = 21;\n                      return gnosisSafeContract.nonce();\n                    case 21:\n                      _context5.t5 = _context5.sent;\n                    case 22:\n                      _context5.t6 = _context5.t5;\n                      _context5.t7 = {\n                        to: _context5.t1,\n                        value: _context5.t2,\n                        data: _context5.t3,\n                        safeTxGas: _context5.t4,\n                        nonce: _context5.t6\n                      };\n                      safeTx = (0, _context5.t0)(_context5.t7);\n                      _context5.next = 27;\n                      return waitForSafeTransaction(transactionPromise, gnosisSafeContract, chainId, safeTx);\n                    case 27:\n                      _yield$waitForSafeTra = _context5.sent;\n                      transaction = _yield$waitForSafeTra.transaction;\n                      receipt = _yield$waitForSafeTra.receipt;\n                      rejected = _yield$waitForSafeTra.rejected;\n                      if (rejected) {\n                        errorMessage = 'On-chain rejection created';\n                        addTransaction({\n                          transaction: Object.assign(Object.assign({}, transaction), {\n                            chainId: chainId\n                          }),\n                          receipt: receipt,\n                          submittedAt: Date.now(),\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                        setState({\n                          status: 'Fail',\n                          transaction: transaction,\n                          receipt: receipt,\n                          errorMessage: errorMessage,\n                          chainId: chainId,\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                      } else {\n                        addTransaction({\n                          transaction: Object.assign(Object.assign({}, transaction), {\n                            chainId: chainId\n                          }),\n                          receipt: receipt,\n                          submittedAt: Date.now(),\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                        setState({\n                          receipt: receipt,\n                          transaction: transaction,\n                          status: 'Success',\n                          chainId: chainId,\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                      }\n                      return _context5.abrupt(\"return\", {\n                        transaction: transaction,\n                        receipt: receipt\n                      });\n                    case 33:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5);\n              }))).apply(this, arguments);\n            };\n            if (chainId) {\n              _context6.next = 6;\n              break;\n            }\n            return _context6.abrupt(\"return\");\n          case 6:\n            transaction = undefined;\n            _context6.prev = 7;\n            setState({\n              status: 'PendingSignature',\n              chainId: chainId,\n              transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n            });\n            if (options === null || options === void 0 ? void 0 : options.enablePendingSignatureNotification) {\n              addNotification({\n                notification: {\n                  type: 'transactionPendingSignature',\n                  submittedAt: Date.now(),\n                  transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                  transactionRequest: transactionRequest\n                },\n                chainId: chainId\n              });\n            }\n            _context6.next = 12;\n            return isNonContractWallet(library, account);\n          case 12:\n            isContractWallet = !_context6.sent;\n            if (!isContractWallet) {\n              _context6.next = 21;\n              break;\n            }\n            _context6.next = 16;\n            return handleContractWallet(transactionPromise, {\n              safeTransaction: safeTransaction\n            });\n          case 16:\n            result = _context6.sent;\n            transaction = result === null || result === void 0 ? void 0 : result.transaction;\n            return _context6.abrupt(\"return\", result === null || result === void 0 ? void 0 : result.receipt);\n          case 21:\n            _context6.next = 23;\n            return transactionPromise;\n          case 23:\n            transaction = _context6.sent;\n            _context6.next = 26;\n            return handleNonContractWallet(transaction);\n          case 26:\n            _result = _context6.sent;\n            transaction = _result === null || _result === void 0 ? void 0 : _result.transaction;\n            return _context6.abrupt(\"return\", _result === null || _result === void 0 ? void 0 : _result.receipt);\n          case 29:\n            _context6.next = 39;\n            break;\n          case 31:\n            _context6.prev = 31;\n            _context6.t0 = _context6[\"catch\"](7);\n            parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = _context6.t0.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = _context6.t0.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = _context6.t0.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : _context6.t0.code);\n            errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n            errorHash = (_l = (_k = (_j = (_h = _context6.t0 === null || _context6.t0 === void 0 ? void 0 : _context6.t0.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = _context6.t0 === null || _context6.t0 === void 0 ? void 0 : _context6.t0.error) === null || _m === void 0 ? void 0 : _m.data;\n            errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = _context6.t0.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = _context6.t0.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : _context6.t0.reason) !== null && _t !== void 0 ? _t : (_u = _context6.t0.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : _context6.t0.message;\n            if (transaction) {\n              droppedAndReplaced = isDroppedAndReplaced(_context6.t0);\n              if (droppedAndReplaced) {\n                status = _context6.t0.receipt.status === 0 ? 'Fail' : 'Success';\n                type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n                addNotification({\n                  notification: {\n                    type: type,\n                    submittedAt: Date.now(),\n                    transaction: _context6.t0.replacement,\n                    receipt: _context6.t0.receipt,\n                    transactionName: (_w = _context6.t0.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n                    originalTransaction: transaction\n                  },\n                  chainId: chainId\n                });\n                setState(function (prevState) {\n                  var _a;\n                  return Object.assign(Object.assign({}, prevState), {\n                    status: status,\n                    transaction: _context6.t0.replacement,\n                    originalTransaction: transaction,\n                    receipt: _context6.t0.receipt,\n                    transactionName: (_a = _context6.t0.replacement) === null || _a === void 0 ? void 0 : _a.transactionName,\n                    errorMessage: errorMessage,\n                    errorCode: errorCode,\n                    errorHash: errorHash,\n                    chainId: chainId\n                  });\n                });\n              } else {\n                setState({\n                  status: 'Fail',\n                  transaction: transaction,\n                  receipt: _context6.t0.receipt,\n                  errorMessage: errorMessage,\n                  errorCode: errorCode,\n                  errorHash: errorHash,\n                  chainId: chainId,\n                  transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                });\n              }\n            } else {\n              setState({\n                status: 'Exception',\n                errorMessage: errorMessage,\n                errorCode: errorCode,\n                errorHash: errorHash,\n                chainId: chainId,\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n              });\n            }\n            return _context6.abrupt(\"return\", undefined);\n          case 39:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[7, 31]]);\n    }))).apply(this, arguments);\n  }, [chainId, addNotification, options === null || options === void 0 ? void 0 : options.transactionName, library, account]);\n  return {\n    promiseTransaction: promiseTransaction,\n    state: state,\n    resetState: resetState\n  };\n}","map":{"version":3,"names":["useCallback","useState","useNotificationsContext","useTransactionsContext","BigNumber","errors","buildSafeTransaction","getLatestNonce","useEthers","waitForSafeTransaction","useGnosisSafeContract","estimateTransactionGasLimit","_x","_x2","_x3","_estimateTransactionGasLimit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","transactionRequest","signer","gasLimitBufferPercentage","estimatedGas","wrap","_callee$","_context","prev","next","abrupt","undefined","gasLimit","t0","from","estimateGas","sent","mul","div","t1","console","error","stop","apply","arguments","estimateContractFunctionGasLimit","_x4","_x5","_x6","_x7","_estimateContractFunctionGasLimit","_callee2","contractWithSigner","functionName","args","_contractWithSigner$e","_callee2$","_context2","_toConsumableArray","isNonContractWallet","_x8","_x9","_isNonContractWallet","_callee3","library","address","code","_callee3$","_context3","getCode","isDroppedAndReplaced","e","TRANSACTION_REPLACED","replacement","reason","cancelled","usePromiseTransaction","chainId","options","_ref2","_useState","status","transactionName","_useState2","_slicedToArray","state","setState","_useTransactionsConte","addTransaction","updateTransaction","_useNotificationsCont","addNotification","_useEthers","account","gnosisSafe","resetState","_ref","promiseTransaction","_x10","_callee6","transactionPromise","_ref4","_ref6","_ref3","safeTransaction","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","handleNonContractWallet","handleContractWallet","transaction","isContractWallet","result","_result","parsedErrorCode","errorCode","errorHash","errorMessage","droppedAndReplaced","type","_args6","_callee6$","_context6","length","_x11","_callee4","receipt","_callee4$","_context4","_ref5","Object","assign","submittedAt","Date","now","wait","_x12","_callee5","_ref7","gnosisSafeContract","latestNonce","safeTx","_yield$waitForSafeTra","rejected","_args5","_callee5$","_context5","get","Error","to","t2","value","t3","data","t4","safeTxGas","t5","nonce","t6","t7","enablePendingSignatureNotification","notification","parseInt","isNaN","originalError","message","originalTransaction","prevState"],"sources":["D:\\CC\\test\\node_modules\\@usedapp\\core\\src\\hooks\\usePromiseTransaction.ts"],"sourcesContent":["import type { TransactionRequest, TransactionResponse } from '@ethersproject/abstract-provider'\nimport { useCallback, useState } from 'react'\nimport { useNotificationsContext, useTransactionsContext } from '../providers'\nimport { TransactionStatus, TransactionOptions, TransactionState } from '../model'\nimport { BigNumber, Contract, errors, Signer } from 'ethers'\nimport { buildSafeTransaction, getLatestNonce, SafeTransaction } from '../helpers/gnosisSafeUtils'\nimport { useEthers } from './useEthers'\nimport { waitForSafeTransaction } from '../helpers/gnosisSafeUtils'\nimport { JsonRpcProvider, FallbackProvider } from '@ethersproject/providers'\nimport { useGnosisSafeContract } from './useGnosisSafeContract'\n\ninterface PromiseTransactionOpts {\n  safeTransaction?: Partial<SafeTransaction>\n}\n\n/**\n * @internal\n */\nexport async function estimateTransactionGasLimit(\n  transactionRequest: TransactionRequest | undefined,\n  signer: Signer | undefined,\n  gasLimitBufferPercentage: number\n) {\n  if (!signer || !transactionRequest) {\n    return undefined\n  }\n  try {\n    const estimatedGas = transactionRequest.gasLimit\n      ? BigNumber.from(transactionRequest.gasLimit)\n      : await signer.estimateGas(transactionRequest)\n    return estimatedGas?.mul(gasLimitBufferPercentage + 100).div(100)\n  } catch (err: any) {\n    console.error(err)\n    return undefined\n  }\n}\n\n/**\n * @internal\n */\nexport async function estimateContractFunctionGasLimit(\n  contractWithSigner: Contract,\n  functionName: string,\n  args: any[],\n  gasLimitBufferPercentage: number\n): Promise<BigNumber | undefined> {\n  try {\n    const estimatedGas = await contractWithSigner.estimateGas[functionName](...args)\n    const gasLimit = estimatedGas?.mul(gasLimitBufferPercentage + 100).div(100)\n    return gasLimit\n  } catch (err: any) {\n    console.error(err)\n    return undefined\n  }\n}\n\n/**\n * @internal\n */\nasync function isNonContractWallet(\n  library: JsonRpcProvider | FallbackProvider | undefined,\n  address: string | undefined\n) {\n  if (!library || !address) {\n    return true\n  }\n  const code = await library.getCode(address)\n  return code === '0x'\n}\n\nconst isDroppedAndReplaced = (e: any) =>\n  e?.code === errors.TRANSACTION_REPLACED && e?.replacement && (e?.reason === 'repriced' || e?.cancelled === false)\n\nexport function usePromiseTransaction(chainId: number | undefined, options?: TransactionOptions) {\n  const [state, setState] = useState<TransactionStatus>({ status: 'None', transactionName: options?.transactionName })\n  const { addTransaction, updateTransaction } = useTransactionsContext()\n  const { addNotification } = useNotificationsContext()\n  const { library, account } = useEthers()\n  const gnosisSafe = useGnosisSafeContract(account, library)\n\n  const resetState = useCallback(() => {\n    setState(({ transactionName }) => ({ status: 'None', transactionName }))\n  }, [setState])\n\n  const promiseTransaction = useCallback(\n    async (\n      transactionPromise: Promise<TransactionResponse>,\n      { safeTransaction }: PromiseTransactionOpts = {},\n      transactionRequest?: TransactionRequest\n    ) => {\n      const handleNonContractWallet = async (transaction: TransactionResponse) => {\n        if (!chainId) return\n\n        setState(({ transactionName }) => ({ transactionName, transaction, status: 'Mining' }))\n        addTransaction({\n          transaction: {\n            ...transaction,\n            chainId,\n          },\n          submittedAt: Date.now(),\n          transactionName: options?.transactionName,\n        })\n        const receipt = await transaction.wait()\n        updateTransaction({\n          transaction: {\n            ...transaction,\n            chainId: chainId,\n          },\n          receipt,\n          transactionName: options?.transactionName,\n        })\n        setState({\n          receipt,\n          transaction,\n          status: 'Success',\n          chainId,\n          transactionName: options?.transactionName,\n        })\n        return { transaction, receipt }\n      }\n\n      const handleContractWallet = async (\n        transactionPromise: Promise<TransactionResponse>,\n        { safeTransaction }: PromiseTransactionOpts = {}\n      ) => {\n        if (!chainId || !library || !account) return\n        setState({ status: 'CollectingSignaturePool', chainId, transactionName: options?.transactionName })\n\n        const gnosisSafeContract = gnosisSafe.get()\n        if (!gnosisSafeContract) {\n          throw new Error(\"Couldn't create Gnosis Safe contract instance\")\n        }\n\n        const latestNonce = await getLatestNonce(chainId, account)\n\n        const safeTx = buildSafeTransaction({\n          to: safeTransaction?.to ?? '',\n          value: safeTransaction?.value,\n          data: safeTransaction?.data,\n          safeTxGas: safeTransaction?.safeTxGas,\n          nonce: latestNonce ? latestNonce + 1 : await gnosisSafeContract.nonce(),\n        })\n\n        const { transaction, receipt, rejected } = await waitForSafeTransaction(\n          transactionPromise,\n          gnosisSafeContract,\n          chainId,\n          safeTx\n        )\n\n        if (rejected) {\n          const errorMessage = 'On-chain rejection created'\n          addTransaction({\n            transaction: {\n              ...transaction,\n              chainId: chainId,\n            },\n            receipt,\n            submittedAt: Date.now(),\n            transactionName: options?.transactionName,\n          })\n          setState({\n            status: 'Fail',\n            transaction,\n            receipt,\n            errorMessage,\n            chainId,\n            transactionName: options?.transactionName,\n          })\n        } else {\n          addTransaction({\n            transaction: {\n              ...transaction,\n              chainId: chainId,\n            },\n            receipt,\n            submittedAt: Date.now(),\n            transactionName: options?.transactionName,\n          })\n          setState({\n            receipt,\n            transaction,\n            status: 'Success',\n            chainId,\n            transactionName: options?.transactionName,\n          })\n        }\n        return { transaction, receipt }\n      }\n\n      if (!chainId) return\n      let transaction: TransactionResponse | undefined = undefined\n      try {\n        setState({ status: 'PendingSignature', chainId, transactionName: options?.transactionName })\n        if (options?.enablePendingSignatureNotification) {\n          addNotification({\n            notification: {\n              type: 'transactionPendingSignature',\n              submittedAt: Date.now(),\n              transactionName: options?.transactionName,\n              transactionRequest,\n            },\n            chainId: chainId,\n          })\n        }\n        const isContractWallet = !(await isNonContractWallet(library, account))\n        if (isContractWallet) {\n          const result = await handleContractWallet(transactionPromise, { safeTransaction })\n          transaction = result?.transaction\n          return result?.receipt\n        } else {\n          transaction = await transactionPromise\n          const result = await handleNonContractWallet(transaction)\n          transaction = result?.transaction\n          return result?.receipt\n        }\n      } catch (e: any) {\n        const parsedErrorCode = parseInt(e.error?.data?.code ?? e.error?.code ?? e.data?.code ?? e.code)\n        const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode\n        const errorHash = e?.error?.data?.originalError?.data ?? e?.error?.data\n        const errorMessage = e.error?.data?.message ?? e.error?.message ?? e.reason ?? e.data?.message ?? e.message\n        if (transaction) {\n          const droppedAndReplaced = isDroppedAndReplaced(e)\n\n          if (droppedAndReplaced) {\n            const status: TransactionState = e.receipt.status === 0 ? 'Fail' : 'Success'\n            const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed'\n\n            addNotification({\n              notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: e.replacement,\n                receipt: e.receipt,\n                transactionName: e.replacement?.transactionName,\n                originalTransaction: transaction,\n              },\n              chainId,\n            })\n\n            setState((prevState) => ({\n              ...prevState,\n              status,\n              transaction: e.replacement,\n              originalTransaction: transaction,\n              receipt: e.receipt,\n              transactionName: e.replacement?.transactionName,\n              errorMessage,\n              errorCode,\n              errorHash,\n              chainId,\n            }))\n          } else {\n            setState({\n              status: 'Fail',\n              transaction,\n              receipt: e.receipt,\n              errorMessage,\n              errorCode,\n              errorHash,\n              chainId,\n              transactionName: options?.transactionName,\n            })\n          }\n        } else {\n          setState({\n            status: 'Exception',\n            errorMessage,\n            errorCode,\n            errorHash,\n            chainId,\n            transactionName: options?.transactionName,\n          })\n        }\n        return undefined\n      }\n    },\n    [chainId, addNotification, options?.transactionName, library, account]\n  )\n\n  return { promiseTransaction, state, resetState }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}