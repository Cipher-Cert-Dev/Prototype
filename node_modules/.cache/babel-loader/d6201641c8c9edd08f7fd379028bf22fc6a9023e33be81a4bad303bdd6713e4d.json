{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\n/**\n * `useResolveName` is a hook that is used to resolve an ENS name (e.g. `name.eth`) to a specific address.\n * @param name ENS name to be resolved\n * @returns {} Object with the following:\n  - `address: string | null | undefined` - resolved address for the given ENS name or null if not found.\n  - `isLoading: boolean` - indicates whether the lookup is in progress.\n  - `error: Error | null` - error that occurred during the lookup or null if no error occurred.\n * @public\n */\nexport var useResolveName = function useResolveName(name) {\n  var _useEthers = useEthers(),\n    library = _useEthers.library;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address = _useState6[0],\n    setAddress = _useState6[1];\n  useEffect(function () {\n    var mounted = true;\n    void _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var resolved;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!library || !name)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 2:\n            _context.prev = 2;\n            setIsLoading(true);\n            _context.next = 6;\n            return library.resolveName(name);\n          case 6:\n            resolved = _context.sent;\n            if (mounted) {\n              _context.next = 9;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 9:\n            setAddress(resolved);\n            _context.next = 17;\n            break;\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](2);\n            if (mounted) {\n              _context.next = 16;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 16:\n            setError(_context.t0);\n          case 17:\n            _context.prev = 17;\n            setIsLoading(false);\n            return _context.finish(17);\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 12, 17, 20]]);\n    }))();\n    return function () {\n      mounted = false;\n    };\n  }, [library, name]);\n  return {\n    address: address,\n    isLoading: isLoading,\n    error: error\n  };\n};","map":{"version":3,"names":["useEffect","useState","useEthers","useResolveName","name","_useEthers","library","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","address","setAddress","mounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resolved","wrap","_callee$","_context","prev","next","abrupt","resolveName","sent","t0","finish","stop"],"sources":["D:\\CC\\Server\\prototype\\node_modules\\@usedapp\\core\\src\\hooks\\useResolveName.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useEthers } from './useEthers'\n\n/**\n * `useResolveName` is a hook that is used to resolve an ENS name (e.g. `name.eth`) to a specific address.\n * @param name ENS name to be resolved\n * @returns {} Object with the following:\n  - `address: string | null | undefined` - resolved address for the given ENS name or null if not found.\n  - `isLoading: boolean` - indicates whether the lookup is in progress.\n  - `error: Error | null` - error that occurred during the lookup or null if no error occurred.\n * @public\n */\nexport const useResolveName = (name: string | undefined) => {\n  const { library } = useEthers()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const [address, setAddress] = useState<string | null>()\n\n  useEffect(() => {\n    let mounted = true\n\n    void (async () => {\n      if (!library || !name) return\n      try {\n        setIsLoading(true)\n        const resolved = await library.resolveName(name)\n        if (!mounted) return\n        setAddress(resolved)\n      } catch (e: any) {\n        if (!mounted) return\n        setError(e)\n      } finally {\n        setIsLoading(false)\n      }\n    })()\n\n    return () => {\n      mounted = false\n    }\n  }, [library, name])\n\n  return { address, isLoading, error }\n}\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,aAAa;AAEvC;;;;;;;;;AASA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAwB,EAAI;EACzD,IAAAC,UAAA,GAAoBH,SAAS,EAAE;IAAvBI,OAAO,GAAAD,UAAA,CAAPC,OAAO;EACf,IAAAC,SAAA,GAAkCN,QAAQ,CAAC,KAAK,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA0BX,QAAQ,CAAe,IAAI,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA8Bf,QAAQ,EAAiB;IAAAgB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BjB,SAAS,CAAC,YAAK;IACb,IAAIoB,OAAO,GAAG,IAAI;IAElB,KAAKC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA;MAAA,IAAAC,QAAA;MAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,MACA,CAACxB,OAAO,IAAI,CAACF,IAAI;cAAAwB,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA;UAAA;YAAAH,QAAA,CAAAC,IAAA;YAEnBlB,YAAY,CAAC,IAAI,CAAC;YAAAiB,QAAA,CAAAE,IAAA;YAAA,OACKxB,OAAO,CAAC0B,WAAW,CAAC5B,IAAI,CAAC;UAAA;YAA1CqB,QAAQ,GAAAG,QAAA,CAAAK,IAAA;YAAA,IACTb,OAAO;cAAAQ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA;UAAA;YACZZ,UAAU,CAACM,QAAQ,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;YAAA,IAEfR,OAAO;cAAAQ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA;UAAA;YACZhB,QAAQ,CAAAa,QAAA,CAAAM,EAAE,CAAC;UAAA;YAAAN,QAAA,CAAAC,IAAA;YAEXlB,YAAY,CAAC,KAAK,CAAC;YAAA,OAAAiB,QAAA,CAAAO,MAAA;UAAA;UAAA;YAAA,OAAAP,QAAA,CAAAQ,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA,CAEtB,GAAC,CAAE;IAEJ,OAAO,YAAK;MACVJ,OAAO,GAAG,KAAK;IACjB,CAAC;EACH,CAAC,EAAE,CAACd,OAAO,EAAEF,IAAI,CAAC,CAAC;EAEnB,OAAO;IAAEc,OAAO,EAAPA,OAAO;IAAER,SAAS,EAATA,SAAS;IAAEI,KAAK,EAALA;EAAK,CAAE;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}