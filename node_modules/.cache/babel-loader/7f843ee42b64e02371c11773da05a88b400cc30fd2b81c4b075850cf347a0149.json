{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ref, _ref2;\nimport { utils, constants } from 'ethers';\nimport { getChainById } from './chain';\nexport var GNOSIS_SAFE_ABI = ['function nonce() view returns (uint256)', 'event ExecutionSuccess(bytes32 txHash, uint256 payment)'];\nexport var buildSafeTransaction = function buildSafeTransaction(template) {\n  return {\n    to: template.to,\n    value: template.value || 0,\n    data: template.data || '0x',\n    operation: template.operation || 0,\n    safeTxGas: template.safeTxGas || 0,\n    baseGas: template.baseGas || 0,\n    gasPrice: template.gasPrice || 0,\n    gasToken: template.gasToken || constants.AddressZero,\n    refundReceiver: template.refundReceiver || constants.AddressZero,\n    nonce: template.nonce || 0\n  };\n};\nvar EIP712_SAFE_TX_TYPE = {\n  SafeTx: [{\n    type: 'address',\n    name: 'to'\n  }, {\n    type: 'uint256',\n    name: 'value'\n  }, {\n    type: 'bytes',\n    name: 'data'\n  }, {\n    type: 'uint8',\n    name: 'operation'\n  }, {\n    type: 'uint256',\n    name: 'safeTxGas'\n  }, {\n    type: 'uint256',\n    name: 'baseGas'\n  }, {\n    type: 'uint256',\n    name: 'gasPrice'\n  }, {\n    type: 'address',\n    name: 'gasToken'\n  }, {\n    type: 'address',\n    name: 'refundReceiver'\n  }, {\n    type: 'uint256',\n    name: 'nonce'\n  }]\n};\nexport var sanitizeTransactionRequest = function sanitizeTransactionRequest(transactionRequest) {\n  var _a;\n  return Object.assign(Object.assign({}, transactionRequest), {\n    data: (_a = transactionRequest.data) !== null && _a !== void 0 ? _a : '0x'\n  });\n};\nexport var calculateSafeTransactionHash = function calculateSafeTransactionHash(safe, safeTx, chainId) {\n  // TODO: Remove after WalletConnectV2 fix\n  // WalletConnectV2 incorrectly passes safeTxGas value, equal 0 (default value).\n  // Thus we have a mismatch between gnosis safeTxHash and one calculated by useDApp (safeTxGas is based on estimation)\n  safeTx = Object.assign(Object.assign({}, safeTx), {\n    safeTxGas: 0\n  });\n  return utils._TypedDataEncoder.hash({\n    verifyingContract: safe.address,\n    chainId: chainId\n  }, EIP712_SAFE_TX_TYPE, safeTx);\n};\nexport var getLatestNonce = function getLatestNonce(_x, _x2) {\n  return (_ref = _ref || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(chainId, safeAddress) {\n    var _a, _b, _c, response, allTransactions, latestNonce;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"https://safe-transaction.\".concat((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName, \".gnosis.io/api/v1/safes/\").concat(safeAddress, \"/all-transactions?limit=1&executed=false&queued=true\"));\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 6:\n          _context.next = 8;\n          return response.json();\n        case 8:\n          allTransactions = _context.sent;\n          latestNonce = (_c = (_b = allTransactions === null || allTransactions === void 0 ? void 0 : allTransactions.results) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.nonce;\n          if (latestNonce) {\n            _context.next = 12;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 12:\n          return _context.abrupt(\"return\", latestNonce);\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", undefined);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 15]]);\n  }))).apply(this, arguments);\n};\nexport var waitForSafeTransaction = function waitForSafeTransaction(_x3, _x4, _x5, _x6) {\n  return (_ref2 = _ref2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(transactionPromise, contract, chainId, safeTx) {\n    var safeTxHash;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          safeTxHash = calculateSafeTransactionHash(contract, safeTx, chainId);\n          return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var _ref3;\n            void transactionPromise.catch(function (err) {\n              if ((err === null || err === void 0 ? void 0 : err.message) === 'Transaction was rejected') {\n                reject(err);\n              }\n            });\n            var onExecutionSuccess = function onExecutionSuccess(_x7, _x8, _x9) {\n              return (_ref3 = _ref3 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(txHash, _payment, event) {\n                var transaction, receipt, currentNonce, _transaction, _receipt;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(txHash === safeTxHash)) {\n                        _context2.next = 11;\n                        break;\n                      }\n                      contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                      _context2.next = 4;\n                      return event.getTransaction();\n                    case 4:\n                      transaction = _context2.sent;\n                      _context2.next = 7;\n                      return event.getTransactionReceipt();\n                    case 7:\n                      receipt = _context2.sent;\n                      resolve({\n                        transaction: transaction,\n                        receipt: receipt,\n                        rejected: false\n                      });\n                      _context2.next = 23;\n                      break;\n                    case 11:\n                      _context2.next = 13;\n                      return contract.nonce();\n                    case 13:\n                      currentNonce = _context2.sent;\n                      if (!(Number(currentNonce) > Number(safeTx.nonce))) {\n                        _context2.next = 23;\n                        break;\n                      }\n                      contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                      _context2.next = 18;\n                      return event.getTransaction();\n                    case 18:\n                      _transaction = _context2.sent;\n                      _context2.next = 21;\n                      return event.getTransactionReceipt();\n                    case 21:\n                      _receipt = _context2.sent;\n                      resolve({\n                        transaction: _transaction,\n                        receipt: _receipt,\n                        rejected: true\n                      });\n                    case 23:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2);\n              }))).apply(this, arguments);\n            };\n            contract.on('ExecutionSuccess', onExecutionSuccess);\n          }));\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }))).apply(this, arguments);\n};","map":{"version":3,"names":["utils","constants","getChainById","GNOSIS_SAFE_ABI","buildSafeTransaction","template","to","value","data","operation","safeTxGas","baseGas","gasPrice","gasToken","AddressZero","refundReceiver","nonce","EIP712_SAFE_TX_TYPE","SafeTx","type","name","sanitizeTransactionRequest","transactionRequest","Object","assign","_a","calculateSafeTransactionHash","safe","safeTx","chainId","_TypedDataEncoder","hash","verifyingContract","address","getLatestNonce","_x","_x2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","safeAddress","_b","_c","response","allTransactions","latestNonce","wrap","_callee$","_context","prev","next","fetch","concat","chainName","sent","ok","abrupt","json","results","t0","console","error","undefined","stop","apply","arguments","waitForSafeTransaction","_x3","_x4","_x5","_x6","_ref2","_callee3","transactionPromise","contract","safeTxHash","_callee3$","_context3","Promise","resolve","reject","_ref3","catch","err","message","onExecutionSuccess","_x7","_x8","_x9","_callee2","txHash","_payment","event","transaction","receipt","currentNonce","_transaction","_receipt","_callee2$","_context2","removeListener","getTransaction","getTransactionReceipt","rejected","Number","on"],"sources":["D:\\CC\\test\\node_modules\\@usedapp\\core\\src\\helpers\\gnosisSafeUtils.ts"],"sourcesContent":["import { TransactionResponse, TransactionReceipt, TransactionRequest } from '@ethersproject/abstract-provider'\nimport { BigNumber, BigNumberish, Contract, Event } from 'ethers'\nimport { utils, constants } from 'ethers'\nimport { getChainById } from './chain'\n\nexport const GNOSIS_SAFE_ABI = [\n  'function nonce() view returns (uint256)',\n  'event ExecutionSuccess(bytes32 txHash, uint256 payment)',\n]\n\ninterface MetaTransaction {\n  to: string\n  value: string | number | BigNumber\n  data: string\n  operation: number\n}\n\nexport interface SafeTransaction extends MetaTransaction {\n  safeTxGas: string | number\n  baseGas: string | number\n  gasPrice: string | number\n  gasToken: string\n  refundReceiver: string\n  nonce: string | number\n}\n\nexport const buildSafeTransaction = (template: {\n  to: string\n  value?: BigNumber | number | string\n  data?: string\n  operation?: number\n  safeTxGas?: number | string\n  baseGas?: number | string\n  gasPrice?: number | string\n  gasToken?: string\n  refundReceiver?: string\n  nonce?: number\n}): SafeTransaction => {\n  return {\n    to: template.to,\n    value: template.value || 0,\n    data: template.data || '0x',\n    operation: template.operation || 0,\n    safeTxGas: template.safeTxGas || 0,\n    baseGas: template.baseGas || 0,\n    gasPrice: template.gasPrice || 0,\n    gasToken: template.gasToken || constants.AddressZero,\n    refundReceiver: template.refundReceiver || constants.AddressZero,\n    nonce: template.nonce || 0,\n  }\n}\n\nconst EIP712_SAFE_TX_TYPE = {\n  SafeTx: [\n    { type: 'address', name: 'to' },\n    { type: 'uint256', name: 'value' },\n    { type: 'bytes', name: 'data' },\n    { type: 'uint8', name: 'operation' },\n    { type: 'uint256', name: 'safeTxGas' },\n    { type: 'uint256', name: 'baseGas' },\n    { type: 'uint256', name: 'gasPrice' },\n    { type: 'address', name: 'gasToken' },\n    { type: 'address', name: 'refundReceiver' },\n    { type: 'uint256', name: 'nonce' },\n  ],\n}\n\nexport const sanitizeTransactionRequest = (transactionRequest: TransactionRequest): TransactionRequest => {\n  return {\n    ...transactionRequest,\n    data: transactionRequest.data ?? '0x', // Non-empty data string is required on Gnosis Safe side.\n  }\n}\n\nexport const calculateSafeTransactionHash = (\n  safe: Contract,\n  safeTx: SafeTransaction,\n  chainId: BigNumberish\n): string => {\n  // TODO: Remove after WalletConnectV2 fix\n  // WalletConnectV2 incorrectly passes safeTxGas value, equal 0 (default value).\n  // Thus we have a mismatch between gnosis safeTxHash and one calculated by useDApp (safeTxGas is based on estimation)\n  safeTx = { ...safeTx, safeTxGas: 0 }\n\n  return utils._TypedDataEncoder.hash({ verifyingContract: safe.address, chainId }, EIP712_SAFE_TX_TYPE, safeTx)\n}\n\nexport const getLatestNonce = async (chainId: number, safeAddress: string): Promise<number | null | undefined> => {\n  try {\n    const response = await fetch(\n      `https://safe-transaction.${\n        getChainById(chainId)?.chainName\n      }.gnosis.io/api/v1/safes/${safeAddress}/all-transactions?limit=1&executed=false&queued=true`\n    )\n    if (!response.ok) return null\n    const allTransactions = await response.json()\n    const latestNonce = allTransactions?.results?.[0]?.nonce\n    if (!latestNonce) return null\n    return latestNonce\n  } catch (err: any) {\n    console.error(err)\n    return undefined\n  }\n}\n\nexport const waitForSafeTransaction = async (\n  transactionPromise: Promise<TransactionResponse>,\n  contract: Contract,\n  chainId: number,\n  safeTx: SafeTransaction\n): Promise<{\n  transaction: TransactionResponse\n  receipt: TransactionReceipt\n  rejected: boolean\n}> => {\n  const safeTxHash = calculateSafeTransactionHash(contract, safeTx, chainId)\n\n  return new Promise((resolve, reject) => {\n    void transactionPromise.catch((err: any) => {\n      if (err?.message === 'Transaction was rejected') {\n        reject(err)\n      }\n    })\n\n    const onExecutionSuccess = async (txHash: string, _payment: BigNumber, event: Event) => {\n      if (txHash === safeTxHash) {\n        contract.removeListener('ExecutionSuccess', onExecutionSuccess)\n\n        const transaction = await event.getTransaction()\n        const receipt = await event.getTransactionReceipt()\n\n        resolve({ transaction, receipt, rejected: false })\n      } else {\n        const currentNonce = await contract.nonce()\n\n        if (Number(currentNonce) > Number(safeTx.nonce)) {\n          contract.removeListener('ExecutionSuccess', onExecutionSuccess)\n          const transaction = await event.getTransaction()\n          const receipt = await event.getTransactionReceipt()\n\n          resolve({\n            transaction,\n            receipt,\n            rejected: true,\n          })\n        }\n      }\n    }\n    contract.on('ExecutionSuccess', onExecutionSuccess)\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}