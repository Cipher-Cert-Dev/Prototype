{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC\\\\test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport StudentNFTABI from \"./StudentNFT.json\"; // Import the ABI for the StudentNFT contract\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x4496aeACe25394FE319bd261e93B4099CF92AdA9\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const calloT = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWeb3(web3Instance);\n      } catch (error) {\n        console.error(\"User denied account access\");\n      }\n    }\n  };\n  useEffect(() => {\n    async function loadContract() {\n      if (web3) {\n        try {\n          const contractInstance = new web3.eth.Contract(StudentNFTABI, contractAddress);\n          setContract(contractInstance);\n        } catch (error) {\n          console.error(\"Error initializing contract:\", error);\n        }\n      }\n    }\n    if (web3) {\n      loadContract();\n    }\n  }, [web3]);\n  const mintStudent = async () => {\n    try {\n      if (contract) {\n        const accounts = await web3.eth.getAccounts();\n        if (accounts.length > 0) {\n          const name = \"John Doe\"; // Replace with the student's name\n          const id = 123; // Replace with the student's ID\n          await contract.methods.mintStudent(name, id).send({\n            from: accounts[0]\n          });\n          setMessage(\"Student NFT minted successfully.\");\n        } else {\n          console.error(\"No Ethereum accounts available.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error minting student NFT:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calloT,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintStudent,\n      children: \"Mint Student NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"25ici5jcMlAAs0RQZk81UWaqo9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","StudentNFTABI","jsxDEV","_jsxDEV","contractAddress","App","_s","web3","setWeb3","contract","setContract","message","setMessage","calloT","window","ethereum","web3Instance","request","method","error","console","loadContract","contractInstance","eth","Contract","mintStudent","accounts","getAccounts","length","name","id","methods","send","from","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CC/test/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport StudentNFTABI from \"./StudentNFT.json\"; // Import the ABI for the StudentNFT contract\n\nconst contractAddress = \"0x4496aeACe25394FE319bd261e93B4099CF92AdA9\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const calloT = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      try {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setWeb3(web3Instance);\n      } catch (error) {\n        console.error(\"User denied account access\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    async function loadContract() {\n      if (web3) {\n        try {\n          const contractInstance = new web3.eth.Contract(\n            StudentNFTABI,\n            contractAddress\n          );\n          setContract(contractInstance);\n        } catch (error) {\n          console.error(\"Error initializing contract:\", error);\n        }\n      }\n    }\n\n    if (web3) {\n      loadContract();\n    }\n  }, [web3]);\n\n  const mintStudent = async () => {\n    try {\n      if (contract) {\n        const accounts = await web3.eth.getAccounts();\n        if (accounts.length > 0) {\n          const name = \"John Doe\"; // Replace with the student's name\n          const id = 123; // Replace with the student's ID\n          await contract.methods\n            .mintStudent(name, id)\n            .send({ from: accounts[0] });\n          setMessage(\"Student NFT minted successfully.\");\n        } else {\n          console.error(\"No Ethereum accounts available.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error minting student NFT:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={calloT}>Connect Wallet</button>\n      <button onClick={mintStudent}>Mint Student NFT</button>\n      <div>\n        <h1>Message:</h1> {message}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,aAAa,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAG,4CAA4C;AAEpE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,YAAY,GAAG,IAAIhB,IAAI,CAACc,MAAM,CAACC,QAAQ,CAAC;MAC9C,IAAI;QACF,MAAMD,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QAChEV,OAAO,CAACQ,YAAY,CAAC;MACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,eAAesB,YAAYA,CAAA,EAAG;MAC5B,IAAId,IAAI,EAAE;QACR,IAAI;UACF,MAAMe,gBAAgB,GAAG,IAAIf,IAAI,CAACgB,GAAG,CAACC,QAAQ,CAC5CvB,aAAa,EACbG,eACF,CAAC;UACDM,WAAW,CAACY,gBAAgB,CAAC;QAC/B,CAAC,CAAC,OAAOH,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF;IACF;IAEA,IAAIZ,IAAI,EAAE;MACRc,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,IAAIhB,QAAQ,EAAE;QACZ,MAAMiB,QAAQ,GAAG,MAAMnB,IAAI,CAACgB,GAAG,CAACI,WAAW,CAAC,CAAC;QAC7C,IAAID,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;UACvB,MAAMC,IAAI,GAAG,UAAU,CAAC,CAAC;UACzB,MAAMC,EAAE,GAAG,GAAG,CAAC,CAAC;UAChB,MAAMrB,QAAQ,CAACsB,OAAO,CACnBN,WAAW,CAACI,IAAI,EAAEC,EAAE,CAAC,CACrBE,IAAI,CAAC;YAAEC,IAAI,EAAEP,QAAQ,CAAC,CAAC;UAAE,CAAC,CAAC;UAC9Bd,UAAU,CAAC,kCAAkC,CAAC;QAChD,CAAC,MAAM;UACLQ,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;QAClD;MACF,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhC,OAAA;MAAQiC,OAAO,EAAEvB,MAAO;MAAAsB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDrC,OAAA;MAAQiC,OAAO,EAAEX,WAAY;MAAAU,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDrC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,EAAC7B,OAAO;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CApEQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}