{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _scrypt;\nimport { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport function scrypt(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return (_scrypt = _scrypt || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(password, salt, n, p, r, dkLen, onProgress) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          assertBytes(password);\n          assertBytes(salt);\n          return _context.abrupt(\"return\", _async(password, salt, {\n            N: n,\n            r: r,\n            p: p,\n            dkLen: dkLen,\n            onProgress: onProgress\n          }));\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n  assertBytes(password);\n  assertBytes(salt);\n  return _sync(password, salt, {\n    N: n,\n    r: r,\n    p: p,\n    dkLen: dkLen,\n    onProgress: onProgress\n  });\n}","map":{"version":3,"names":["scrypt","_sync","scryptAsync","_async","assertBytes","_x","_x2","_x3","_x4","_x5","_x6","_x7","_scrypt","_asyncToGenerator","_regeneratorRuntime","mark","_callee","password","salt","n","p","r","dkLen","onProgress","wrap","_callee$","_context","prev","next","abrupt","N","stop","apply","arguments","scryptSync"],"sources":["D:/CC/test/node_modules/ethereum-cryptography/esm/scrypt.js"],"sourcesContent":["import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n"],"mappings":";;;AAAA,SAASA,MAAM,IAAIC,KAAK,EAAEC,WAAW,IAAIC,MAAM,QAAQ,sBAAsB;AAC7E,SAASC,WAAW,QAAQ,YAAY;AACxC,gBAAsBJ,MAAMA,CAAAK,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,QAAAC,OAAA,GAAAA,OAAA,IAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAC,QAAsBC,QAAQ,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,UAAU;IAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACnExB,WAAW,CAACa,QAAQ,CAAC;UACrBb,WAAW,CAACc,IAAI,CAAC;UAAC,OAAAQ,QAAA,CAAAG,MAAA,WACX1B,MAAM,CAACc,QAAQ,EAAEC,IAAI,EAAE;YAAEY,CAAC,EAAEX,CAAC;YAAEE,CAAC,EAADA,CAAC;YAAED,CAAC,EAADA,CAAC;YAAEE,KAAK,EAALA,KAAK;YAAEC,UAAU,EAAVA;UAAW,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAK,IAAA;MAAA;IAAA,GAAAf,OAAA;EAAA,CACnE,IAAAgB,KAAA,OAAAC,SAAA;AAAA;AACD,OAAO,SAASC,UAAUA,CAACjB,QAAQ,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,UAAU,EAAE;EACnEnB,WAAW,CAACa,QAAQ,CAAC;EACrBb,WAAW,CAACc,IAAI,CAAC;EACjB,OAAOjB,KAAK,CAACgB,QAAQ,EAAEC,IAAI,EAAE;IAAEY,CAAC,EAAEX,CAAC;IAAEE,CAAC,EAADA,CAAC;IAAED,CAAC,EAADA,CAAC;IAAEE,KAAK,EAALA,KAAK;IAAEC,UAAU,EAAVA;EAAW,CAAC,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}