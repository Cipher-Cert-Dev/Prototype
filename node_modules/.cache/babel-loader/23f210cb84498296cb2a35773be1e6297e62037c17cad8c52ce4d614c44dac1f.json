{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC\\\\test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport StudentNFTABI from \"./StudentNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0xEB61dDD0eD37E99B478943621b15933D0D6Aca9F\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [contractInitialized, setContractInitialized] = useState(false);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n  const calloT = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWeb3(web3Instance);\n      } catch (error) {\n        console.error(\"User denied account access\");\n      }\n    }\n  };\n  useEffect(() => {\n    async function loadContract() {\n      if (web3) {\n        try {\n          const contractInstance = new web3.eth.Contract(StudentNFTABI, contractAddress);\n          setContract(contractInstance);\n          setContractInitialized(true);\n          const events = await contractInstance.getPastEvents(\"allEvents\", {\n            fromBlock: 0,\n            toBlock: \"latest\"\n          });\n          events.forEach(event => {\n            if (event.event === \"StudentMinted\") {\n              const {\n                tokenId,\n                name,\n                id\n              } = event.returnValues;\n              setMessage(`Student NFT Minted - Name: ${name}, ID: ${id}, Token ID: ${tokenId}`);\n            }\n          });\n          contractInstance.events.allEvents().on(\"data\", event => {\n            if (event.event === \"StudentMinted\") {\n              const {\n                tokenId,\n                name,\n                id\n              } = event.returnValues;\n              setMessage(`Student NFT Minted - Name: ${name}, ID: ${id}, Token ID: ${tokenId}`);\n            }\n          }).on(\"error\", error => {\n            console.error(\"Error listening to events:\", error);\n          });\n        } catch (error) {\n          console.error(\"Error initializing contract:\", error);\n        }\n      }\n    }\n    if (web3) {\n      loadContract();\n    }\n  }, [web3]);\n  const handleMessage = async () => {\n    try {\n      if (contract) {\n        const tokenId = 0;\n        console.log(\"Calling getStudentDetails with tokenId:\", tokenId);\n        const result = await contract.methods.getStudentDetails(tokenId).call({\n          gas: 3000000\n        });\n        console.log(\"Result from contract call:\", result);\n        if (result) {\n          const [name, id] = result;\n          setMessage(`Name: ${name}, ID: ${id}`);\n        } else {\n          console.error(\"No result returned from the contract.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error calling getStudentDetails:\", error);\n    }\n  };\n  const mintStudent = async () => {\n    try {\n      if (contractInitialized) {\n        const accounts = await web3.eth.getAccounts();\n        if (accounts.length > 0) {\n          const name = inputName;\n          const id = parseInt(inputId);\n          await contract.methods.mintStudent(name, id).send({\n            from: accounts[0]\n          });\n          setMessage(\"Student NFT minted successfully.\");\n        } else {\n          console.error(\"No Ethereum accounts available.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error minting student NFT:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calloT,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputName,\n          onChange: e => setInputName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputId,\n          onChange: e => setInputId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintStudent,\n      disabled: !contractInitialized,\n      children: \"Mint Student NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessage,\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \" \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yOIPF2zCWqq9GbCdBonyw8FVc5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","StudentNFTABI","jsxDEV","_jsxDEV","contractAddress","App","_s","web3","setWeb3","contract","setContract","message","setMessage","contractInitialized","setContractInitialized","inputName","setInputName","inputId","setInputId","calloT","window","ethereum","web3Instance","request","method","error","console","loadContract","contractInstance","eth","Contract","events","getPastEvents","fromBlock","toBlock","forEach","event","tokenId","name","id","returnValues","allEvents","on","handleMessage","log","result","methods","getStudentDetails","call","gas","mintStudent","accounts","getAccounts","length","parseInt","send","from","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["D:/CC/test/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport StudentNFTABI from \"./StudentNFT.json\";\n\nconst contractAddress = \"0xEB61dDD0eD37E99B478943621b15933D0D6Aca9F\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [contractInitialized, setContractInitialized] = useState(false);\n  const [inputName, setInputName] = useState(\"\");\n  const [inputId, setInputId] = useState(\"\");\n\n  const calloT = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      try {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setWeb3(web3Instance);\n      } catch (error) {\n        console.error(\"User denied account access\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    async function loadContract() {\n      if (web3) {\n        try {\n          const contractInstance = new web3.eth.Contract(\n            StudentNFTABI,\n            contractAddress\n          );\n          setContract(contractInstance);\n          setContractInitialized(true);\n\n          const events = await contractInstance.getPastEvents(\"allEvents\", {\n            fromBlock: 0,\n            toBlock: \"latest\",\n          });\n\n          events.forEach((event) => {\n            if (event.event === \"StudentMinted\") {\n              const { tokenId, name, id } = event.returnValues;\n              setMessage(\n                `Student NFT Minted - Name: ${name}, ID: ${id}, Token ID: ${tokenId}`\n              );\n            }\n          });\n\n          contractInstance.events\n            .allEvents()\n            .on(\"data\", (event) => {\n              if (event.event === \"StudentMinted\") {\n                const { tokenId, name, id } = event.returnValues;\n                setMessage(\n                  `Student NFT Minted - Name: ${name}, ID: ${id}, Token ID: ${tokenId}`\n                );\n              }\n            })\n            .on(\"error\", (error) => {\n              console.error(\"Error listening to events:\", error);\n            });\n        } catch (error) {\n          console.error(\"Error initializing contract:\", error);\n        }\n      }\n    }\n\n    if (web3) {\n      loadContract();\n    }\n  }, [web3]);\n\n  const handleMessage = async () => {\n    try {\n      if (contract) {\n        const tokenId = 0;\n        console.log(\"Calling getStudentDetails with tokenId:\", tokenId);\n        const result = await contract.methods\n          .getStudentDetails(tokenId)\n          .call({ gas: 3000000 });\n        console.log(\"Result from contract call:\", result);\n\n        if (result) {\n          const [name, id] = result;\n          setMessage(`Name: ${name}, ID: ${id}`);\n        } else {\n          console.error(\"No result returned from the contract.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error calling getStudentDetails:\", error);\n    }\n  };\n\n  const mintStudent = async () => {\n    try {\n      if (contractInitialized) {\n        const accounts = await web3.eth.getAccounts();\n        if (accounts.length > 0) {\n          const name = inputName;\n          const id = parseInt(inputId);\n          await contract.methods\n            .mintStudent(name, id)\n            .send({ from: accounts[0] });\n          setMessage(\"Student NFT minted successfully.\");\n        } else {\n          console.error(\"No Ethereum accounts available.\");\n        }\n      } else {\n        console.error(\"Contract not initialized.\");\n      }\n    } catch (error) {\n      console.error(\"Error minting student NFT:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={calloT}>Connect Wallet</button>\n      <div>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={inputName}\n            onChange={(e) => setInputName(e.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          ID:\n          <input\n            type=\"number\"\n            value={inputId}\n            onChange={(e) => setInputId(e.target.value)}\n          />\n        </label>\n      </div>\n      <button onClick={mintStudent} disabled={!contractInitialized}>\n        Mint Student NFT\n      </button>\n      <button onClick={handleMessage}>Mint</button>\n      <div>\n        <h1>Message:</h1> {message}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}