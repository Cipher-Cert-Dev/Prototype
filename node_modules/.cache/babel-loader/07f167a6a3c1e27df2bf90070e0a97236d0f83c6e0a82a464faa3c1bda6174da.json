{"ast":null,"code":"import _regeneratorRuntime from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/CC/Server/prototype/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\nimport { Contract } from 'ethers';\n/**\n * `useLookupAddress` is a hook that is used to retrieve the ENS (e.g. `name.eth`) or Rave Names (e.g. `name.ftm`) for a specific address.\n * @param address address to lookup\n * @param options additional options\n * @returns {} Object with the following:\n  - `ens: string | null | undefined` - ENS or Rave name of the account or null if not found.\n  - `isLoading: boolean` - indicates whether the lookup is in progress.\n  - `error: Error | null` - error that occurred during the lookup or null if no error occurred.\n * @public\n * @example\n * const { account } = useEthers()\n * const { ens } = useLookupAddress(account)\n *\n * return (\n *   <p>Account: {ens ?? account}</p>\n * )\n */\nexport function useLookupAddress(address) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    rave = _ref.rave;\n  var _useEthers = useEthers(),\n    library = _useEthers.library;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    ens = _useState2[0],\n    setENS = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    var mounted = true;\n    void _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var raveContract, resolved, _resolved;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!library || !address)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 2:\n            _context.prev = 2;\n            setIsLoading(true);\n            if (!rave) {\n              _context.next = 14;\n              break;\n            }\n            raveContract = new Contract('0x14Ffd1Fa75491595c6FD22De8218738525892101', [{\n              inputs: [{\n                internalType: 'address',\n                name: 'owner',\n                type: 'address'\n              }, {\n                internalType: 'uint256',\n                name: 'index',\n                type: 'uint256'\n              }],\n              name: 'getName',\n              outputs: [{\n                internalType: 'string',\n                name: '',\n                type: 'string'\n              }],\n              stateMutability: 'view',\n              type: 'function'\n            }], library); // this call will fail anyway if the chain isn't Fantom, so we don't need an extra chainId check\n            _context.next = 8;\n            return raveContract.getName(address, 0);\n          case 8:\n            resolved = _context.sent;\n            if (mounted) {\n              _context.next = 11;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 11:\n            setENS(resolved);\n            _context.next = 20;\n            break;\n          case 14:\n            _context.next = 16;\n            return library.lookupAddress(address);\n          case 16:\n            _resolved = _context.sent;\n            if (mounted) {\n              _context.next = 19;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 19:\n            setENS(_resolved);\n          case 20:\n            _context.next = 27;\n            break;\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](2);\n            if (mounted) {\n              _context.next = 26;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 26:\n            setError(_context.t0);\n          case 27:\n            _context.prev = 27;\n            setIsLoading(false);\n            return _context.finish(27);\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 22, 27, 30]]);\n    }))();\n    return function () {\n      mounted = false;\n    };\n  }, [address, library]);\n  return {\n    ens: ens,\n    isLoading: isLoading,\n    error: error\n  };\n}","map":{"version":3,"names":["useEffect","useState","useEthers","Contract","useLookupAddress","address","_ref","arguments","length","undefined","rave","_useEthers","library","_useState","_useState2","_slicedToArray","ens","setENS","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","mounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","raveContract","resolved","_resolved","wrap","_callee$","_context","prev","next","abrupt","inputs","internalType","name","type","outputs","stateMutability","getName","sent","lookupAddress","t0","finish","stop"],"sources":["D:\\CC\\Server\\prototype\\node_modules\\@usedapp\\core\\src\\hooks\\useLookupAddress.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useEthers } from './useEthers'\nimport { Contract } from 'ethers'\n\ninterface LookupAddressOptions {\n  rave?: boolean\n}\n\n/**\n * `useLookupAddress` is a hook that is used to retrieve the ENS (e.g. `name.eth`) or Rave Names (e.g. `name.ftm`) for a specific address.\n * @param address address to lookup \n * @param options additional options\n * @returns {} Object with the following:\n  - `ens: string | null | undefined` - ENS or Rave name of the account or null if not found.\n  - `isLoading: boolean` - indicates whether the lookup is in progress.\n  - `error: Error | null` - error that occurred during the lookup or null if no error occurred.\n * @public\n * @example\n * const { account } = useEthers()\n * const { ens } = useLookupAddress(account)\n *\n * return (\n *   <p>Account: {ens ?? account}</p>\n * )\n */\nexport function useLookupAddress(address: string | undefined, { rave }: LookupAddressOptions = {}) {\n  const { library } = useEthers()\n  const [ens, setENS] = useState<string | null>()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n\n  useEffect(() => {\n    let mounted = true\n\n    void (async () => {\n      if (!library || !address) return\n      try {\n        setIsLoading(true)\n        if (rave) {\n          const raveContract = new Contract(\n            '0x14Ffd1Fa75491595c6FD22De8218738525892101',\n            [\n              {\n                inputs: [\n                  { internalType: 'address', name: 'owner', type: 'address' },\n                  { internalType: 'uint256', name: 'index', type: 'uint256' },\n                ],\n                name: 'getName',\n                outputs: [{ internalType: 'string', name: '', type: 'string' }],\n                stateMutability: 'view',\n                type: 'function',\n              },\n            ],\n            library\n          )\n          // this call will fail anyway if the chain isn't Fantom, so we don't need an extra chainId check\n          const resolved = await raveContract.getName(address, 0)\n          if (!mounted) return\n          setENS(resolved)\n        } else {\n          const resolved = await library.lookupAddress(address)\n          if (!mounted) return\n          setENS(resolved)\n        }\n      } catch (e: any) {\n        if (!mounted) return\n        setError(e)\n      } finally {\n        setIsLoading(false)\n      }\n    })()\n\n    return () => {\n      mounted = false\n    }\n  }, [address, library])\n\n  return { ens, isLoading, error }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}