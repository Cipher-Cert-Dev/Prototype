{"ast":null,"code":"import _defineProperty from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"D:/CC/prototype/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function chainStateReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var _a, _b, _c;\n  var current = (_a = state[action.chainId]) === null || _a === void 0 ? void 0 : _a.blockNumber;\n  if (!current || action.blockNumber >= current) {\n    if (action.type === 'FETCH_SUCCESS') {\n      var newState = action.state;\n      // merge with existing state\n      var oldState = (_c = (_b = state[action.chainId]) === null || _b === void 0 ? void 0 : _b.state) !== null && _c !== void 0 ? _c : {};\n      for (var _i = 0, _Object$entries = Object.entries(oldState); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          address = _Object$entries$_i[0],\n          entries = _Object$entries$_i[1];\n        newState = Object.assign(Object.assign({}, newState), _defineProperty({}, address, Object.assign(Object.assign({}, entries), newState[address])));\n      }\n      return Object.assign(Object.assign({}, state), _defineProperty({}, action.chainId, {\n        blockNumber: action.blockNumber,\n        state: newState\n      }));\n    } else if (action.type === 'FETCH_ERROR') {\n      return Object.assign(Object.assign({}, state), _defineProperty({}, action.chainId, Object.assign(Object.assign({}, state[action.chainId]), {\n        blockNumber: action.blockNumber,\n        error: action.error\n      })));\n    }\n  }\n  return state;\n}","map":{"version":3,"names":["chainStateReducer","state","arguments","length","undefined","action","current","_a","chainId","blockNumber","type","newState","oldState","_c","_b","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","address","assign","_defineProperty","error"],"sources":["D:\\CC\\prototype\\node_modules\\@usedapp\\core\\src\\providers\\chainState\\common\\chainStateReducer.ts"],"sourcesContent":["import { ChainState } from './model'\n\nexport interface State {\n  [chainId: number]:\n    | {\n        blockNumber: number\n        state?: ChainState\n        error?: unknown\n      }\n    | undefined\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport type ChainStateAction = FetchSuccess | FetchError\n\ninterface FetchSuccess {\n  type: 'FETCH_SUCCESS'\n  chainId: number\n  blockNumber: number\n  state: ChainState\n}\n\ninterface FetchError {\n  type: 'FETCH_ERROR'\n  chainId: number\n  blockNumber: number\n  error: unknown\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function chainStateReducer(state: State = {}, action: ChainStateAction) {\n  const current = state[action.chainId]?.blockNumber\n  if (!current || action.blockNumber >= current) {\n    if (action.type === 'FETCH_SUCCESS') {\n      let newState = action.state\n      // merge with existing state\n      const oldState = state[action.chainId]?.state ?? {}\n      for (const [address, entries] of Object.entries(oldState)) {\n        newState = {\n          ...newState,\n          [address]: {\n            ...entries,\n            ...newState[address],\n          },\n        }\n      }\n      return {\n        ...state,\n        [action.chainId]: { blockNumber: action.blockNumber, state: newState },\n      }\n    } else if (action.type === 'FETCH_ERROR') {\n      return {\n        ...state,\n        [action.chainId]: { ...state[action.chainId], blockNumber: action.blockNumber, error: action.error },\n      }\n    }\n  }\n  return state\n}\n"],"mappings":";;AA+BA;;;AAGA,OAAM,SAAUA,iBAAiBA,CAAA,EAA4C;EAAA,IAA3CC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAe,EAAE;EAAA,IAAEG,MAAwB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;;EAC3E,IAAME,OAAO,GAAG,CAAAC,EAAA,GAAAN,KAAK,CAACI,MAAM,CAACG,OAAO,CAAC,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,WAAW;EAClD,IAAI,CAACH,OAAO,IAAID,MAAM,CAACI,WAAW,IAAIH,OAAO,EAAE;IAC7C,IAAID,MAAM,CAACK,IAAI,KAAK,eAAe,EAAE;MACnC,IAAIC,QAAQ,GAAGN,MAAM,CAACJ,KAAK;MAC3B;MACA,IAAMW,QAAQ,GAAG,CAAAC,EAAA,IAAAC,EAAA,GAAAb,KAAK,CAACI,MAAM,CAACG,OAAO,CAAC,cAAAM,EAAA,uBAAAA,EAAA,CAAEb,KAAK,cAAAY,EAAA,cAAAA,EAAA,GAAI,EAAE;MACnD,SAAAE,EAAA,MAAAC,eAAA,GAAiCC,MAAM,CAACC,OAAO,CAACN,QAAQ,CAAC,EAAAG,EAAA,GAAAC,eAAA,CAAAb,MAAA,EAAAY,EAAA,IAAE;QAAtD,IAAAI,kBAAA,GAAAC,cAAA,CAAAJ,eAAA,CAAAD,EAAA;UAAOM,OAAO,GAAAF,kBAAA;UAAED,OAAO,GAAAC,kBAAA;QAC1BR,QAAQ,GAAAM,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KACHX,QAAQ,GAAAY,eAAA,KACVF,OAAO,EAACJ,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KACJJ,OAAO,GACPP,QAAQ,CAACU,OAAO,CAAC,GAEvB;;MAEH,OAAAJ,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KACKrB,KAAK,GAAAsB,eAAA,KACPlB,MAAM,CAACG,OAAO,EAAG;QAAEC,WAAW,EAAEJ,MAAM,CAACI,WAAW;QAAER,KAAK,EAAEU;MAAQ,CAAE;KAEzE,MAAM,IAAIN,MAAM,CAACK,IAAI,KAAK,aAAa,EAAE;MACxC,OAAAO,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KACKrB,KAAK,GAAAsB,eAAA,KACPlB,MAAM,CAACG,OAAO,EAACS,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KAAOrB,KAAK,CAACI,MAAM,CAACG,OAAO,CAAC;QAAEC,WAAW,EAAEJ,MAAM,CAACI,WAAW;QAAEe,KAAK,EAAEnB,MAAM,CAACmB;MAAK;;;EAIxG,OAAOvB,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}